{"version":3,"file":"extension.js","mappings":"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","sources":["../.././node_modules/tail-stream/index.js","../.././src/GDB.ts","../.././src/GDBDebugSession.ts","../.././src/activateDbg.ts","../.././src/parser/AsyncRecord.ts","../.././src/parser/MIParser.ts","../.././src/parser/Record.ts","../.././src/parser/ResultRecord.ts","../.././src/parser/StreamRecord.ts","../.././node_modules/vscode-debugadapter/lib/debugSession.js","../.././node_modules/vscode-debugadapter/lib/handles.js","../.././node_modules/vscode-debugadapter/lib/internalLogger.js","../.././node_modules/vscode-debugadapter/lib/logger.js","../.././node_modules/vscode-debugadapter/lib/loggingDebugSession.js","../.././node_modules/vscode-debugadapter/lib/main.js","../.././node_modules/vscode-debugadapter/lib/messages.js","../.././node_modules/vscode-debugadapter/lib/protocol.js","../.././node_modules/vscode-debugadapter/lib/runDebugAdapter.js","../.././node_modules/vscode-debugadapter/node_modules/mkdirp/index.js","../.././node_modules/vscode-debugadapter/node_modules/mkdirp/lib/find-made.js","../.././node_modules/vscode-debugadapter/node_modules/mkdirp/lib/mkdirp-manual.js","../.././node_modules/vscode-debugadapter/node_modules/mkdirp/lib/mkdirp-native.js","../.././node_modules/vscode-debugadapter/node_modules/mkdirp/lib/opts-arg.js","../.././node_modules/vscode-debugadapter/node_modules/mkdirp/lib/path-arg.js","../.././node_modules/vscode-debugadapter/node_modules/mkdirp/lib/use-native.js","../../external commonjs \"vscode\"","../../external node-commonjs \"child_process\"","../../external node-commonjs \"events\"","../../external node-commonjs \"fs\"","../../external node-commonjs \"net\"","../../external node-commonjs \"path\"","../../external node-commonjs \"stream\"","../../external node-commonjs \"url\"","../../external node-commonjs \"util\"","../../webpack/bootstrap","../.././src/extension.ts"],"sourcesContent":["var path = require('path');\nvar stream = require('stream');\nvar util = require('util');\nvar fs = require('fs');\n\nfunction TailStream(filepath, opts) {\n    TailStream.super_.call(this, opts);\n\n    this.lastSize = null;\n    this.bytesRead = 0;\n    this.watching = false;\n    this.path = path.resolve(filepath);\n    this.buffer = new Buffer(16 * 1024);\n\n    this.opts = {\n        beginAt: 0,\n        detectTruncate: true,\n        onMove: 'follow', // or 'end' or 'exit' or 'stay'\n        onTruncate: 'end', // or 'reset' to seek to beginning of file\n        endOnError: false,\n        useWatch: !!fs.watch,\n        waitForCreate: false\n    };\n\n    var key;\n    for(key in opts) {\n        this.opts[key] = opts[key];\n    }\n    \n    this._start = function() {\n        this.firstRead = true;\n        this.waitingForReappear = false;\n        try {\n            this.fd = fs.openSync(this.path, 'r');\n            this.dataAvailable = true;\n        } catch(e) {\n            if(!opts.waitForCreate) throw e;\n            this.fd = null;\n            this.dataAvailable = false;\n            this.waitForFileToReappear();\n        }\n    };\n\n    this.getCurrentPath = function(filename) {\n        if (filename && !fs.existsSync('/proc')) {\n            return filename;\n        }\n        try {\n            return fs.readlinkSync('/proc/self/fd/'+this.fd);\n        } catch(e) {\n            if(filename) return filename;\n            return null;\n        }\n    };\n\n    this.waitForFileToReappear = function() {\n        // if we're using fs.watch, cancel it\n        // since it follows moved files\n        // we will switch to fs.watchFile\n        // until a file re-appears at this.path\n        if(this.opts.useWatch) {\n            if(this.watcher && this.watcher.close) {\n                this.watcher.close();\n            }\n            this.watcher = null;\n        }\n        if(this.fd !== null) fs.close(this.fd, function() {\n            this.fd = null;\n        });\n        this.waitingForReappear = true;\n        this.waitForMoreData(true);\n    };\n\n    this.fileReappeared = function() {\n        try {\n            this.fd = fs.openSync(this.path, 'r');\n        } catch(e) {\n            return;\n        }\n        this.waitingForReappear = false;\n        // switch back to fs.watch if supported\n        if(this.opts.useWatch) {\n            fs.unwatchFile(this.path, this.watchFileCallback);\n            this.watcher = null;\n            this.waitForMoreData();\n        }\n        this.emit('replace');\n        // reset size and bytes read since this is a new file\n        this.lastSize = null;\n        this.bytesRead = 0;\n    };\n\n    this.move = function(newpath) {\n        var oldpath = this.path ? path.resolve(this.path) : null;\n        if(this.opts.onMove == 'end') {\n            this.path = newpath;\n            this.emit('end'); return;\n        } else if(this.opts.onMove == 'error') {\n            this.path = newpath;\n            this.error(\"File move detected\"); return;\n        } else if(this.opts.onMove == 'stay') {\n            this.emit('move', oldpath, newpath);\n            this.waitForFileToReappear();\n        } else { // opts.onMove == 'follow\n            this.path = newpath;\n            this.emit('move', oldpath, newpath);\n            // if we were using watchFile, unwatch old file location and watch new file location\n            if(this.watcher === true) {\n                fs.unwatchFile(oldpath, this.watchFileCallback);\n                this.watcher = false;\n                this.waitForMoreData();\n            } \n        }\n    };\n\n    // if forceWatchFile is true,\n    // then fs.watchFile is always used instead of fs.watch\n    this.waitForMoreData = function(forceWatchFile) {\n        if(this.watcher) {\n            return;\n        }\n        if(this.opts.useWatch && !forceWatchFile) {\n            this.watcher = fs.watch(this.path, {persistent: true}, function(event, filename) {\n                if(event === 'change') {\n                    this.dataAvailable = true;\n                    this.read(0);\n                } else if(event === 'rename') {\n                    var newpath = this.getCurrentPath(filename);\n                    this.move(newpath);\n                }\n            }.bind(this));\n        } else {\n            // On Mac OS X and Linux, watchFile doesn't report the (re)appearance of\n            // the file. Watch the enclosing dir and then compare the filename of events\n            this.watcher = fs.watch(path.dirname(this.path), {persistent: true}, function(event, filename) {\n                if (filename && path.basename(this.path) === filename) {\n                    this.fileReappeared();\n                }\n            }.bind(this));\n            // On Mac OS X & Linux (Docker), currently results in ENOENT error\n            // fs.watchFile(this.path, {persistent:true, inverval: 500}, this.watchFileCallback);\n            // this.watcher = true;\n        }\n    };\n\n    this.error = function(msg, code) {\n        if(this.opts.endOnError) {\n            this.end(code);\n        } else {\n            this.emit('error', msg);\n        }\n    };\n\n    this.watchFileCallback = function(cur, prev) {\n        // was the file moved or deleted?\n        if(!cur.dev && !cur.ino) {\n            if(this.waitingForReappear) {\n                return;\n            }\n            // check if it was moved\n            var newpath = this.getCurrentPath();\n            if(!newpath) {\n                this.error(\"File was deleted\", 'EBADF');\n                return;\n            } else {\n                this.move(newpath);\n            }\n        }\n        if(this.waitingForReappear) { // file re-appeared\n            this.fileReappeared();\n        }\n        if(cur.mtime.getTime() > prev.mtime.getTime()) {\n            this.dataAvailable = true;\n            this.read(0);\n        }\n\n    }.bind(this);\n\n    this.end = function(errCode) {\n        if(errCode != 'EBADF' && this.fd) { \n            fs.close(this.fd, function() {\n                this.fd = null;\n            });\n\t\t\tthis.fd = null;\n        }\n        this.push(null);\n        if(this.watcher === true) {\n            fs.unwatchFile(this.path, this.watchFileCallback);\n        } else if(this.watcher && this.watcher.close) {\n            this.watcher.close();\n        }\n    };\n\n    this._read = function(size) {\n\n        if(!this.dataAvailable) {\n            return this.push('');\n        }\n\n        if(!this.path) return this._readCont();\n\n        if((this.opts.detectTruncate || (this.firstRead && (this.opts.beginAt == 'end')))) {\n            // check for truncate\n            fs.stat(this.path, this._readCont.bind(this));\n        } else {\n            this._readCont();\n        }\n    };\n\n    this._readCont = function(err, stat) {\n        if(err) {\n            if(err.code == 'ENOENT') {\n                if (this.opts.onMove !== 'follow') {\n                    this.error(\"File deleted\", err.code);\n                }\n            } else {\n                this.error(\"Error during truncate detection: \" + err, err.code);\n            }\n            stat = null;\n        }\n\n        if(stat) {\n\n            // seek to end of file\n            if(this.firstRead && (this.opts.beginAt == 'end')) {\n                this.bytesRead = stat.size;\n                this.dataAvailable = false;\n                this.waitForMoreData();\n                this.push('');\n                this.firstRead = false;\n                return;\n            }\n\n            // truncate detection\n            if(!this.lastSize) {\n                this.lastSize = stat.size;\n            } else {\n                if(stat.size < this.lastSize) {\n                    this.emit('truncate', stat.size, this.lastSize);\n                    if(this.opts.onTruncate == 'reset') {\n                        this.bytesRead = 0;\n                    } else {\n                        this.end();\n                        return;\n                    }\n                }\n            }\n            this.lastSize = stat.size;\n        }\n\n        // seek to desired start position\n        if(this.firstRead) {\n            if(parseInt(this.opts.beginAt) > 0) {\n                this.bytesRead = parseInt(this.opts.beginAt);\n            }\n            this.firstRead = false;\n        }\n        if(!this.fd) {\n            return false;\n        }\n        fs.read(this.fd, this.buffer, 0, this.buffer.length, this.bytesRead, function(err, bytesRead, buffer) {\n            if(err) {\n                if(this.opts.endOnError) {\n                    this.end(err.code);\n                    return;\n                } else {\n                    this.waitForMoreData();\n                    this.push('');\n                    this.emit('error', err);\n                }\n            }\n\n            if(bytesRead === 0) {\n                this.dataAvailable = false;\n                this.waitForMoreData();\n                this.push('');\n                this.emit('eof');\n                return;\n            }\n\n            this.bytesRead += bytesRead;\n            this.push(this.buffer.slice(0, bytesRead));\n\n        }.bind(this));\n    };\n\n    this._start();\n}\n\nutil.inherits(TailStream, stream.Readable);\n\nmodule.exports = ts = {\n\n    createReadStream: function(path, options) {\n        return new TailStream(path, options);\n    }\n};\n","import {MIParser, STOPPED, RUNNING, ERROR} from './parser/MIParser';\nimport {EventEmitter} from 'events';\nimport {Record} from './parser/Record';\nimport {AsyncRecord, AsyncRecordType} from './parser/AsyncRecord';\nimport {ResultRecord} from './parser/ResultRecord';\nimport {StreamRecord} from './parser/StreamRecord';\nimport {Breakpoint, Thread, StackFrame, Source} from 'vscode-debugadapter';\nimport {OutputChannel, Terminal} from 'vscode';\nimport * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as ts from 'tail-stream';\nimport * as path from 'path';\nimport {spawn} from 'child_process';\nimport {\n  AttachRequestArguments,\n  LaunchRequestArguments,\n  DebugLoggingLevel,\n} from './GDBDebugSession';\n\n// GDB stop reasons\nexport const EVENT_OUTPUT = 'output';\nexport const EVENT_RUNNING = 'running';\nexport const EVENT_BREAKPOINT_HIT = 'breakpoint-hit';\nexport const EVENT_END_STEPPING_RANGE = 'end-stepping-range';\nexport const EVENT_FUNCTION_FINISHED = 'function-finished';\nexport const EVENT_EXITED_NORMALLY = 'exited-normally';\nexport const EVENT_SIGNAL = 'signal-received';\nexport const EVENT_PAUSED = 'paused';\nexport const EVENT_ERROR = 'error';\nexport const EVENT_ERROR_FATAL = 'error-fatal';\nexport const EVENT_THREAD_NEW = 'thread-created';\nexport const EVENT_SOLIB_LOADED = 'library-loaded';\n\nexport const SCOPE_LOCAL = 1000;\n\n// Used as an abstraction for integrated/non-integrated terminals\nabstract class TerminalWindow {\n  public abstract sendCommand(cmd: string): void;\n  public abstract destroy(): void;\n  protected terminal: any;\n}\n\nclass IntegratedTerminal extends TerminalWindow {\n  constructor(cmd: string, terminal: Terminal) {\n    super();\n    this.terminal = terminal;\n    this.sendCommand('clear');\n    this.sendCommand(cmd);\n    this.terminal.show(true);\n  }\n\n  public sendCommand(cmd: string) {\n    this.terminal.sendText(cmd);\n  }\n\n  public destroy() {\n    // Nothing needs to be done for integrated terminal\n  }\n}\n\n// Todo implement terminateRequest and close external terminal\nclass ExternalTerminal extends TerminalWindow {\n  constructor(cmd: string) {\n    super();\n    this.terminal = spawn('x-terminal-emulator', ['-e', cmd]);\n    this.terminal.on('error', () => {\n      console.log('Failed to open external terminal');\n    });\n  }\n\n  public sendCommand(cmd: string) {\n    this.terminal.stdin.write(cmd + '\\n');\n  }\n\n  public destroy() {\n    // Close terminal if not done already\n    this.terminal.kill();\n  }\n}\n\nexport class GDB extends EventEmitter {\n  // Default path to MI debugger. If none is specified in the launch config\n  // we will fallback to this path\n  private path = 'gdb';\n\n  // Arguments to pass to GDB. These will be combined with any that need to\n  // be threaded to the inferior process\n  private args: string[] = ['--interpreter=mi', '-q', '--tty=`tty`'];\n\n  // This instance will handle all MI output parsing\n  private parser: MIParser;\n\n  // Used to sync MI inputs and outputs. Value increases by 1 with each\n  // command issued\n  private token: number;\n\n  // Callbacks to execute when a command identified by \"token\" is resolved\n  // by the debugger\n  private handlers: {[token: number]: (record: Record) => any};\n\n  // The current thread on which the debugger is stopped on. If the debugger\n  // is not currently stopped on any thread, this value is -1. Also serves\n  // as a stopped sentinel\n  private threadID: number;\n\n  private outputChannel: OutputChannel;\n  private terminal?: TerminalWindow;\n\n  // Control whether or not to dump extension diagnostic information to a\n  // dedicated output channel (useful for development)\n  private debug: DebugLoggingLevel = DebugLoggingLevel.OFF;\n\n  // Filepaths to input and output pipes used for IPC with GDB process. These\n  // will be randomly generated on each debug session\n  private inputFile = '';\n  private outputFile = '';\n\n  // IO handles to actual pipes. The input handle is an actual FIFO handle\n  // while the output handle is a normal fd\n  private inputHandle: any;\n  private outputHandle: any;\n\n  // Output buffering for stdout pipe\n  private ob: string;\n\n  // Inferior PID for attach requests\n  public PID = 0;\n\n  // Should we emit a stopped event on a pause?\n  private handleSIGINT = true;\n\n  // Should we only load certain libraries?\n  private sharedLibraries: string[] = [];\n\n  // Should we use absolute file paths when setting breakpoints?\n  private useAbsoluteFilePaths = true;\n\n  public constructor(outputChannel: OutputChannel) {\n    super();\n\n    this.outputChannel = outputChannel;\n    this.token = 0;\n    this.threadID = 0;\n    this.ob = '';\n    this.handlers = [];\n    this.parser = new MIParser();\n\n    // This is a bit of a hack -- since there is no elegant way of making a\n    // FIFO pipe in nodeJS we need to resort to a shell to do so. We need to\n    // do this in the constructor to give sufficient time for the FIFO pipe\n    // creation prior to writing to it\n    this.createIOPipes();\n  }\n\n  private createIOPipes() {\n    this.inputFile = this.generateTmpFile('In') + this.token;\n    this.outputFile = this.generateTmpFile('Out') + this.token;\n    const cmd = `mkfifo ${this.inputFile} ;`;\n    const {exec} = require('child_process');\n    exec(cmd);\n  }\n\n  private log(text: string) {\n    if (this.debug !== DebugLoggingLevel.OFF) {\n      this.outputChannel.appendLine(text);\n    }\n  }\n\n  private genRandomID(length: number): string {\n    let result = '';\n    const characters =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  private generateTmpFile(desc: string): string {\n    return `/tmp/vGDB_${desc}${this.genRandomID(8)}`;\n  }\n\n  private createLaunchCommand(): string {\n    // This idea is borrowed from the Microsoft cpptools VSCode extension.\n    // It really is the only conceivable way to support running in the\n    // integrated terminal. We spin on the GDB process to prevent the shell\n    // from accepting normal commands. We set a trap handler to correctly\n    // communicate inferior completion back to the debug adapter so we can\n    // issue the corresponding TerminatedEvent and take down GDB. We issue\n    // the +m command to hide the background \"done\" message when GDB\n    // finishes debugging the inferior\n    // All of these hacks probably won't work on Windows\n    fs.writeFile(this.outputFile, '', () => {});\n\n    // We cannot simply send all commands to the terminal and assume the\n    // user's default shell is bash. Instead we will wrap all cmds in a\n    // string and explicitly invoke the bash shell\n    return `trap '' 2 ; ${this.path} ${this.args.join(' ')} < ${\n      this.inputFile\n    } > ${\n      this.outputFile\n    } & clear ; pid=$!; set +m ; wait $pid ; trap 2 ; echo ;`;\n  }\n\n  public setDebug(debug: DebugLoggingLevel) {\n    this.debug = debug;\n  }\n\n  private isLaunch(arg: any): arg is LaunchRequestArguments {\n    return arg && typeof arg.program === 'string';\n  }\n\n  public spawn(\n    args: LaunchRequestArguments | AttachRequestArguments,\n    terminal: Terminal\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let envVarsSetupCmd;\n      // Spawn the GDB process in the integrated terminal. In order to\n      // correctly separate inferior output from GDB output and pipe\n      // them to the correct handlers we use some hacks:\n      // (1) We set the inferior-tty to be that of the integrated terminal\n      //     This lets us pipe all stdout/stderr from the inferior there\n      //     and separate it from any output created by GDB. It also lets\n      //     us use the integrated terminal for the inferior's input\n      // (2) We redirect all GDB stdout to a tmp file which the debug\n      //     adapter will monitor for command results and other async\n      //     notify events\n      // (3) We redirect all stdin to GDB through another FIFO pipe which\n      //     we will keep open throughout the entirety of the debug\n      //     session (to prevent premature debugger exit).\n      if (args.debugger) {\n        this.path = args.debugger;\n      }\n\n      // (Advanced) if user has specified filenames only be used for\n      // setting breakpoints, set the appropriate flag\n      if (args.useAbsoluteFilePaths !== undefined) {\n        this.useAbsoluteFilePaths = args.useAbsoluteFilePaths;\n      }\n\n      // If this is an attach request, the program arg will be a numeric\n      // We need to thread this differently to GDB\n      if (this.isLaunch(args)) {\n        if (args.args) {\n          this.args.push('--args');\n          this.args.push(args.program);\n          this.args = this.args.concat(args.args);\n        } else {\n          this.args.push(args.program);\n        }\n\n        if (args.envVars) {\n          envVarsSetupCmd = this.createEnvVarsCmd(args.envVars);\n        }\n      } else {\n        this.PID = args.program;\n      }\n\n      const launchCmd = this.createLaunchCommand();\n      this.log(launchCmd);\n\n      if (envVarsSetupCmd && this.terminal) {\n        this.terminal.sendCommand(envVarsSetupCmd);\n      }\n\n      // If the launch has requested an external terminal, spawn one. If so,\n      // we will not clear the old terminal. We only clear the integrated\n      // terminal if we will be reusing it\n      if (args.externalConsole !== undefined && args.externalConsole) {\n        this.terminal = new ExternalTerminal(`bash -c \"${launchCmd}\"`);\n      } else {\n        this.terminal = new IntegratedTerminal(\n          `bash -c \"${launchCmd}\"`,\n          terminal\n        );\n      }\n\n      this.inputHandle = fs.createWriteStream(this.inputFile, {flags: 'a'});\n      this.outputHandle = ts.createReadStream(this.outputFile);\n\n      this.outputHandle.on('data', (data: any) => {\n        this.stdoutHandler(data);\n      });\n\n      // Only consider GDB as ready once pipe is ready. Once ready send all setup\n      // cmds to GDB and then resolve promise\n      this.inputHandle.on('open', () => {\n        const cmdsPending: Promise<any>[] = [];\n\n        if (this.isLaunch(args) && args.startupCmds) {\n          args.startupCmds.forEach(cmd => {\n            cmdsPending.push(this.sendCommand(cmd));\n          });\n        }\n\n        Promise.all(cmdsPending).then(brkpoints => {\n          resolve(true);\n        });\n      });\n    });\n  }\n\n  // Send an MI command to GDB\n  public sendCommand(cmd: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const token = ++this.token;\n      cmd = token + cmd;\n      this.log(cmd);\n      this.inputHandle.write(cmd + '\\n');\n\n      this.handlers[token] = (record: Record) => {\n        this.log(record.prettyPrint());\n        resolve(record);\n      };\n    });\n  }\n\n  public deferLibraryLoading(libraries: string[]): Promise<any> {\n    this.sharedLibraries = libraries;\n    console.log(this.sharedLibraries);\n    return this.sendCommand('-gdb-set auto-solib-add off');\n  }\n\n  public sanitize(text: string, MI: boolean): string {\n    text = (text || '')\n      .replace(/&\"/g, '')\n      .replace(/\\\\n/g, '')\n      .replace(/\\\\r/g, '')\n      .replace(/\\\\t/g, '\\t')\n      .replace(/\\\\v/g, '\\v')\n      .replace(/\\\\\"/g, '\"')\n      .replace(/\\\\'/g, \"'\")\n      .replace(/\\\\\\\\/g, '\\\\');\n\n    // If we are sanitizing MI output there are additional things we need\n    // to strip out\n    if (MI) {\n      text = text.replace(/^~\"[0-9]*/g, '').replace(/\"$/g, '');\n    }\n\n    return text;\n  }\n\n  private createEnvVarsCmd(envVars: object): string {\n    const cmd = '';\n\n    // TODO\n    /*\n    Object.keys(envVars).forEach((key: string) => {\n      cmd = `export ${key} = ${envVars[key]}; ${cmd}`;\n    });*/\n\n    return cmd;\n  }\n\n  // Called on any stdout produced by GDB Process\n  private stdoutHandler(data: any) {\n    let record: Record | null;\n    const str = data.toString('utf8');\n    this.ob += str;\n\n    // We may be receiving buffered output. In such case defer parsing until\n    // full output has been transmitted as denoted by a trailing newline\n    const nPos = this.ob.lastIndexOf('\\n');\n    if (nPos !== -1) {\n      this.ob = this.ob.substr(0, nPos);\n\n      // If multiple lines have buffered, handle each one\n      const lines = this.ob.substr(0, nPos).split('\\n') as string[];\n\n      // Flush output buffer for next round of output\n      this.ob = this.ob.substring(nPos + 1);\n\n      lines.forEach(line => {\n        try {\n          if ((record = this.parser.parse(line))) {\n            this.handleParsedResult(record);\n\n            // Minimize the amount of logging\n            if (\n              record.constructor === StreamRecord ||\n              this.debug === DebugLoggingLevel.VERBOSE\n            ) {\n              this.emit(\n                EVENT_OUTPUT,\n                this.sanitize(record.prettyPrint(), true)\n              );\n            }\n          }\n        } catch (error: any) {\n          this.log(error.stack);\n          console.log(error.stack);\n          this.emit(EVENT_ERROR_FATAL);\n        }\n      });\n    }\n  }\n\n  private handleParsedResult(record: Record) {\n    switch (record.constructor) {\n      case AsyncRecord:\n        // Notify GDB client of status change\n        switch (record.getType()) {\n          case AsyncRecordType.EXEC:\n            switch (record.getClass()) {\n              case STOPPED: {\n                this.threadID = parseInt(record.getResult('thread-id'));\n                const reason = record.getResult('reason');\n\n                // Play nice with attach requests\n                if (reason !== undefined) {\n                  switch (reason) {\n                    case EVENT_BREAKPOINT_HIT:\n                      this.emit(reason, this.threadID);\n                      break;\n\n                    case EVENT_END_STEPPING_RANGE:\n                      this.emit(reason, this.threadID);\n                      break;\n\n                    case EVENT_FUNCTION_FINISHED:\n                      this.emit(EVENT_FUNCTION_FINISHED, this.threadID);\n                      break;\n\n                    case EVENT_EXITED_NORMALLY:\n                      // Kill debugger\n                      this.sendCommand('quit');\n                      this.emit(reason);\n                      break;\n\n                    case EVENT_SIGNAL:\n                      if (this.handleSIGINT) {\n                        this.emit(reason, this.threadID);\n                      } else {\n                        // Reset for next signal since commands are honored in sync\n                        this.handleSIGINT = true;\n                      }\n                      break;\n\n                    default:\n                      throw new Error('unknown stop reason: ' + reason);\n                  }\n                }\n                break;\n              }\n\n              case RUNNING: {\n                let tid: number, all: boolean;\n                this.threadID = -1;\n                all = false;\n\n                // If threadID is not a number, this means all threads have continued\n                tid = parseInt(record.getResult('thread-id'));\n                if (isNaN(tid)) {\n                  tid = this.threadID;\n                  all = true;\n                }\n\n                // For now we assume all threads resume execution\n                this.emit(EVENT_RUNNING, this.threadID, all);\n                break;\n              }\n            }\n            break;\n\n          case AsyncRecordType.NOTIFY:\n            // Listen for thread events\n            if (record.getClass() === EVENT_THREAD_NEW) {\n              this.emit(EVENT_THREAD_NEW, record.getResult('id'));\n            } else if (\n              this.sharedLibraries.length &&\n              record.getClass() === EVENT_SOLIB_LOADED\n            ) {\n              // If deferred symbol loading is enabled, check that\n              // the shared library loaded is in the user specified\n              // whitelist. If not, unload it\n              const libLoaded = path.basename(record.getResult('id'));\n              if (this.sharedLibraries.indexOf(libLoaded) > -1) {\n                this.log(`Loading ${libLoaded}`);\n                this.sendCommand(`sharedlibrary ${libLoaded}`);\n              }\n            }\n            break;\n\n          case AsyncRecordType.STATUS:\n            break;\n        }\n        break;\n\n      case ResultRecord:\n        // Fulfill promise on stack\n        if (!isNaN(record.getToken())) {\n          const handler = this.handlers[record.getToken()];\n\n          if (handler) {\n            handler(record);\n            delete this.handlers[record.getToken()];\n          } else {\n            // There could be instances where we should fire DAP\n            // events even if the request did not originally contain\n            // a handler. For example, up/down should correctly move\n            // the active stack frame in VSCode\n          }\n        }\n        break;\n\n      case StreamRecord:\n        // Forward raw GDB output to debug console\n        break;\n    }\n  }\n\n  public clearBreakpoints(): Promise<any> {\n    return this.sendCommand('-break-delete');\n  }\n\n  public setBreakpoints(\n    sourceFile: string,\n    bps: any[] | null\n  ): Promise<Breakpoint[]> {\n    return new Promise((resolve, reject) => {\n      const bpsPending: Promise<any>[] = [];\n      const bpsVerified: Breakpoint[] = [];\n\n      if (bps) {\n        bps.forEach((bp: any) => {\n          // If using filenames only, strip out path\n          if (!this.useAbsoluteFilePaths) {\n            sourceFile = path.basename(sourceFile);\n          }\n\n          let promise = this.sendCommand(\n            `-break-insert -f ${sourceFile}:${bp.line}`\n          );\n          bpsPending.push(promise);\n          promise.then((record: ResultRecord) => {\n            // If this is a conditional breakpoint we must relay the\n            // expression to GDB and update the breakpoint\n            const bpInfo = record.getResult('bkpt');\n\n            if (bp.condition) {\n              promise = this.sendCommand(\n                `-break-condition ${bpInfo.number} ${bp.condition}`\n              );\n              promise.then((record: ResultRecord) => {\n                bpsVerified.push(new Breakpoint(true, bpInfo.line));\n              });\n            } else {\n              bpsVerified.push(new Breakpoint(true, bpInfo.line));\n            }\n          });\n        });\n\n        Promise.all(bpsPending).then(brkpoints => {\n          resolve(bpsVerified);\n        });\n      } else {\n        // No breakpoints to verify\n        resolve([]);\n      }\n    });\n  }\n\n  public startInferior(): Promise<any> {\n    // Launch the debuggee target -- we need to do some magic here to hide\n    // the longstanding GDB bug when redirecting inferior output to a\n    // different tty. So we clear the active terminal and continue on our\n    // merry way.\n    return new Promise((resolve, reject) => {\n      this.sendCommand('-gdb-set target-async on').then(() => {\n        return this.sendCommand('-exec-run').then(() => {\n          // TODO: timing on this seems to be off for remoteSSH\n          vscode.commands\n            .executeCommand('workbench.action.terminal.clear')\n            .then(() => {\n              resolve(true);\n            });\n        });\n      });\n    });\n  }\n\n  public attachInferior(): Promise<any> {\n    // Only for attach requests\n    return new Promise((resolve, reject) => {\n      this.sendCommand('-gdb-set target-async on').then(() => {\n        this.sendCommand(`attach ${this.PID}`).then(() => {\n          // TODO: will likely need to clear terminal as well like in launchRequest\n          return this.sendCommand('-exec-continue').then(() => {\n            resolve(true);\n          });\n        });\n      });\n    });\n  }\n\n  public evaluateExpr(expr: string, frameID?: number): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let cmd = '-data-evaluate-expression';\n\n      if (frameID) {\n        // \"normalize\" frameID with threadID\n        frameID = frameID - this.threadID + 1;\n        cmd += ` --frame ${frameID} --thread ${this.threadID}`;\n      }\n\n      cmd += ` \"${expr}\"`;\n\n      this.sendCommand(cmd).then((record: ResultRecord) => {\n        resolve(this.sanitize(record.getResult('value'), false));\n      });\n    });\n  }\n\n  // This is a little different than the evaluate expr fcn as the expr to be\n  // evaluated may be composed of various calls and other gdb commands, so\n  // we pipe it as if the user would have typed it at the CL\n  public execUserCmd(expr: string, frameID?: number): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let cmd = '-interpreter-exec';\n\n      if (frameID) {\n        // \"normalize\" frameID with threadID\n        frameID = frameID - this.threadID + 1;\n        cmd += ` --frame ${frameID} --thread ${this.threadID}`;\n      }\n\n      cmd += ` console \"${expr}\"`;\n\n      this.sendCommand(cmd).then((record: ResultRecord) => {\n        // If an error has resulted, also send an error event to show it to the user\n        if (record.getClass() === ERROR) {\n          this.emit(EVENT_ERROR, record.getResult('msg').replace(/\\\\/g, ''));\n        }\n\n        resolve(record.getResult('value'));\n      });\n\n      // If this was an up or down command, send a continued and paused\n      // event to trick VSCode into re-requesting the stacktrace.\n      // TODO: this will not cause the right stackframe to be selected as\n      // the debug adapter protocol does not support this\n      // See https://github.com/microsoft/debug-adapter-protocol/issues/118\n      if (expr === 'up' || expr === 'down') {\n        this.emit(EVENT_RUNNING, this.threadID, true);\n        this.emit(EVENT_PAUSED);\n      }\n    });\n  }\n\n  public getThreads(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.sendCommand('-thread-info').then((record: ResultRecord) => {\n        const threadsResult: Thread[] = [];\n        const threads = record.getResult('threads');\n        for (let i = 0, len = threads.length; i < len; i++) {\n          const thread = new Thread(parseInt(threads[i].id), threads[i].name);\n          threadsResult.push(thread);\n        }\n        resolve(threadsResult);\n      });\n    });\n  }\n\n  public isStopped(): boolean {\n    return this.threadID !== -1;\n  }\n\n  public getStack(threadID: number): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.sendCommand(`-stack-list-frames --thread ${threadID}`).then(\n        (record: ResultRecord) => {\n          const stackFinal: StackFrame[] = [];\n          record.getResult('stack').forEach((frame: any) => {\n            frame = frame[1];\n            stackFinal.push(\n              new StackFrame(\n                threadID + parseInt(frame.level),\n                frame.func,\n                new Source(frame.file, frame.fullname),\n                parseInt(frame.line)\n              )\n            );\n          });\n\n          resolve(stackFinal);\n        }\n      );\n    });\n  }\n\n  public getVars(reference: number): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // TODO: support more than just frame locals\n      this.sendCommand(\n        `-stack-list-variables --thread ${this.threadID} --frame ${\n          reference - this.threadID\n        } --all-values`\n      ).then((record: Record) => {\n        resolve(record.getResult('variables'));\n      });\n    });\n  }\n\n  public next(threadID: number): Promise<any> {\n    return this.sendCommand(`-exec-next --thread ${threadID}`);\n  }\n\n  public continue(threadID?: number): Promise<any> {\n    if (threadID) {\n      return this.sendCommand(`-exec-continue --thread ${threadID}`);\n    } else {\n      return this.sendCommand('-exec-continue');\n    }\n  }\n\n  public stepIn(threadID: number): Promise<any> {\n    return this.sendCommand(`-exec-step --thread ${threadID}`);\n  }\n\n  public stepOut(threadID: number): Promise<any> {\n    return this.sendCommand(`-exec-finish --thread ${threadID}`);\n  }\n\n  // If catchSignal is false, we will not emit a stopped event. This is a\n  // workaround for automatically pausing the debugger for user executed\n  // commands while the inferior is running\n  public pause(threadID?: number, catchSignal?: boolean): Promise<any> {\n    if (catchSignal !== undefined && !catchSignal) {\n      this.handleSIGINT = false;\n    }\n\n    return this.sendCommand(`-exec-interrupt ${threadID || ''}`);\n  }\n\n  public quit(attach: boolean): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (attach) {\n        this.sendCommand('detach');\n      }\n\n      this.dispose();\n      return this.sendCommand('-gdb-exit');\n    });\n  }\n\n  public updateVar(variable: string, val: string): Promise<any> {\n    return this.sendCommand(`set var ${variable} = ${val}`);\n  }\n\n  public dispose() {\n    if (this.terminal) {\n      this.terminal.destroy();\n    }\n  }\n}\n","// eslint-disable-next-line node/no-extraneous-import\nimport {DebugProtocol} from 'vscode-debugprotocol';\nimport {\n  InitializedEvent,\n  LoggingDebugSession,\n  TerminatedEvent,\n  StoppedEvent,\n  StackFrame,\n  Thread,\n  Scope,\n  ContinuedEvent,\n  OutputEvent,\n  Variable,\n  ThreadEvent,\n} from 'vscode-debugadapter';\nimport {\n  GDB,\n  EVENT_BREAKPOINT_HIT,\n  EVENT_END_STEPPING_RANGE,\n  EVENT_RUNNING,\n  EVENT_EXITED_NORMALLY,\n  EVENT_FUNCTION_FINISHED,\n  EVENT_OUTPUT,\n  EVENT_SIGNAL,\n  EVENT_PAUSED,\n  EVENT_ERROR,\n  EVENT_ERROR_FATAL,\n  EVENT_THREAD_NEW,\n  SCOPE_LOCAL,\n} from './GDB';\nimport {Record} from './parser/Record';\nimport * as vscode from 'vscode';\nimport {OutputChannel, Terminal} from 'vscode';\n\nexport enum DebugLoggingLevel {\n  OFF = 'off',\n  BASIC = 'basic',\n  VERBOSE = 'verbose',\n}\n\nexport interface LaunchRequestArguments\n  extends DebugProtocol.LaunchRequestArguments {\n  /** Absolute program to path to debug */\n  program: string;\n  /** Should inferior immediately stop? */\n  stopOnEntry?: boolean;\n  /** Arguments to pass to inferior */\n  args?: string[];\n  /** Launch directory */\n  cwd: string;\n  /** Debugger path */\n  debugger: string;\n  /** Target name */\n  name: string;\n  /** GDB commands to run on startp */\n  startupCmds?: string[];\n  /** Shell variables to set in debugger terminal */\n  envVars?: {};\n  /** Shared libraries for deferred symbol loading */\n  sharedLibraries?: string[];\n  /** How verbose should debug logging be? */\n  debug?: DebugLoggingLevel;\n  /** Should inferior terminal be in VSCode? */\n  externalConsole?: boolean;\n  /** Should absolute filepaths be used? */\n  useAbsoluteFilePaths?: boolean;\n}\n\nexport interface AttachRequestArguments\n  extends DebugProtocol.AttachRequestArguments {\n  /** PID of process to debug. */\n  program: number;\n  /** Debugger path */\n  debugger: string;\n  /** How verbose should debug logging be? */\n  debug?: DebugLoggingLevel;\n  /** Should inferior terminal be in VSCode? */\n  externalConsole?: boolean;\n  /** Should absolute filepaths be used? */\n  useAbsoluteFilePaths?: boolean;\n}\n\n// This is the main class which implements the debug adapter protocol. It will\n// instantiate a separate GDB object which handles spawning and interacting with\n// the GDB process (i.e. parsing MI output). The session handles requests and\n// responses with the IDE\nexport class GDBDebugSession extends LoggingDebugSession {\n  private GDB: GDB;\n  private outputChannel: OutputChannel;\n  private terminal: Terminal;\n  private debug: boolean;\n\n  public constructor(terminal: Terminal, outputChannel: OutputChannel) {\n    super();\n    this.debug = true;\n\n    // The outputChannel is to separate debug logging from the adapter\n    // from the output of GDB. We need to clear it on each launch\n    // request to remove stale output from prior runs\n    this.terminal = terminal;\n    this.outputChannel = outputChannel;\n    this.outputChannel.clear();\n    this.GDB = new GDB(this.outputChannel);\n  }\n\n  protected log(text: string): void {\n    if (this.debug) {\n      this.outputChannel.appendLine(text);\n    }\n  }\n\n  protected error(text: string): void {\n    console.error(text);\n\n    // We do not cache the value in the adapter's constructor so that any\n    // changes can immediately take effect\n    if (vscode.workspace.getConfiguration('vgdb').get('showErrorPopup')) {\n      vscode.window.showErrorMessage(text);\n    }\n  }\n\n  protected async initializeRequest(\n    response: DebugProtocol.InitializeResponse,\n    args: DebugProtocol.InitializeRequestArguments\n  ): Promise<void> {\n    // Bind error handler for unexpected GDB errors\n    this.GDB.on(EVENT_ERROR_FATAL, (tid: number) => {\n      this.error(\n        'vGDB has encountered a fatal error. Please check the vGDB output channel and create an issue at http://www.github.com/penagos/vgdb/issues'\n      );\n      this.sendEvent(new TerminatedEvent());\n    });\n\n    // Pipe to debug console\n    this.GDB.on(EVENT_OUTPUT, (text: string) => {\n      // Massage GDB output as much as possible\n      this.sendEvent(new OutputEvent(text + '\\n', 'console'));\n    });\n\n    // Events triggered by debuggeer\n    this.GDB.on(EVENT_RUNNING, (threadID: number, allThreads: boolean) => {\n      this.sendEvent(new ContinuedEvent(threadID, allThreads));\n    });\n\n    this.GDB.on(EVENT_BREAKPOINT_HIT, (threadID: number) => {\n      this.sendEvent(new StoppedEvent('breakpoint', threadID));\n    });\n\n    this.GDB.on(EVENT_END_STEPPING_RANGE, (threadID: number) => {\n      this.sendEvent(new StoppedEvent('step', threadID));\n    });\n\n    this.GDB.on(EVENT_FUNCTION_FINISHED, (threadID: number) => {\n      this.sendEvent(new StoppedEvent('step-out', threadID));\n    });\n\n    this.GDB.on(EVENT_EXITED_NORMALLY, () => {\n      this.sendEvent(new TerminatedEvent());\n    });\n\n    this.GDB.on(EVENT_SIGNAL, (threadID: number) => {\n      // TODO: handle other signals\n      this.sendEvent(new StoppedEvent('pause', threadID));\n    });\n\n    this.GDB.on(EVENT_PAUSED, () => {\n      this.sendEvent(new StoppedEvent('pause', 1));\n    });\n\n    this.GDB.on(EVENT_ERROR, (msg: string) => {\n      // We do not cache the value in the adapter's constructor so\n      // that any changes can immediately take effect\n      if (vscode.workspace.getConfiguration('vgdb').get('showErrorPopup')) {\n        vscode.window.showErrorMessage(msg);\n      }\n    });\n\n    this.GDB.on(EVENT_THREAD_NEW, (threadID: number) => {\n      this.sendEvent(new ThreadEvent('started', threadID));\n    });\n\n    response.body = response.body || {};\n    response.body.supportsEvaluateForHovers = true;\n    response.body.supportsSetVariable = true;\n    response.body.supportsEvaluateForHovers = true;\n    response.body.supportsConfigurationDoneRequest = true;\n\n    this.sendResponse(response);\n    this.sendEvent(new InitializedEvent());\n  }\n\n  protected async attachRequest(\n    response: DebugProtocol.AttachResponse,\n    args: AttachRequestArguments\n  ) {\n    // TODO: support startup commands like LaunchRequest\n    this.GDB.setDebug(args.debug || DebugLoggingLevel.OFF);\n    this.GDB.spawn(args, this.terminal).then(() => {\n      this.sendResponse(response);\n    });\n  }\n\n  protected async launchRequest(\n    response: DebugProtocol.LaunchResponse,\n    args: LaunchRequestArguments\n  ) {\n    // Only send initialized response once GDB is fully spawned\n    this.GDB.setDebug(args.debug || DebugLoggingLevel.OFF);\n    this.GDB.spawn(args, this.terminal).then(() => {\n      // If deferred symbols are to be used, set that here\n      if (args.sharedLibraries !== undefined) {\n        // Since commands are sent in a blocking manner we do not need\n        // to spin on this request before responding to the launchRequest\n        this.GDB.deferLibraryLoading(args.sharedLibraries);\n      }\n\n      this.sendResponse(response);\n    });\n  }\n\n  protected async configurationDoneRequest(\n    response: DebugProtocol.ConfigurationDoneResponse,\n    args: DebugProtocol.ConfigurationDoneArguments\n  ) {\n    // Only send initialized response once GDB is fully spawned\n    if (!this.GDB.PID) {\n      this.GDB.startInferior().then(() => {\n        this.sendResponse(response);\n      });\n    } else {\n      this.GDB.attachInferior().then(() => {\n        this.sendResponse(response);\n      });\n    }\n  }\n\n  protected setBreakPointsRequest(\n    response: DebugProtocol.SetBreakpointsResponse,\n    args: DebugProtocol.SetBreakpointsArguments\n  ): void {\n    this.GDB.clearBreakpoints().then(() => {\n      this.GDB.setBreakpoints(\n        args.source.path || '',\n        args.breakpoints || null\n      ).then(bps => {\n        response.body = {\n          breakpoints: bps,\n        };\n        this.sendResponse(response);\n      });\n    });\n  }\n\n  protected threadsRequest(response: DebugProtocol.ThreadsResponse): void {\n    this.GDB.getThreads().then((threads: Thread[]) => {\n      response.body = {\n        threads: threads,\n      };\n      this.sendResponse(response);\n    });\n  }\n\n  protected stackTraceRequest(\n    response: DebugProtocol.StackTraceResponse,\n    args: DebugProtocol.StackTraceArguments\n  ): void {\n    this.GDB.getStack(args.threadId).then((stack: StackFrame[]) => {\n      response.body = {\n        stackFrames: stack,\n        totalFrames: stack.length - 1,\n      };\n      this.sendResponse(response);\n    });\n  }\n\n  protected scopesRequest(\n    response: DebugProtocol.ScopesResponse,\n    args: DebugProtocol.ScopesArguments\n  ): void {\n    // We will always create the same scopes regardless of the state of the\n    // debugger\n    response.body = {\n      scopes: [new Scope('Local', SCOPE_LOCAL + args.frameId, false)],\n    };\n    this.sendResponse(response);\n  }\n\n  protected variablesRequest(\n    response: DebugProtocol.VariablesResponse,\n    args: DebugProtocol.VariablesArguments,\n    request?: DebugProtocol.Request\n  ) {\n    // For now we assume all requests are for SCOPE_LOCAL -- will need to\n    // be revisited once support for additional scopes is added\n    this.GDB.getVars(args.variablesReference - SCOPE_LOCAL).then(\n      (vars: any[]) => {\n        const variables: Variable[] = [];\n\n        vars.forEach(variable => {\n          // If this is a string strip out special chars\n          if (typeof variable.value === 'string') {\n            variable.value = this.GDB.sanitize(variable.value, false);\n          }\n\n          variables.push(new Variable(variable.name, variable.value));\n        });\n\n        response.body = {\n          variables: variables,\n        };\n\n        this.sendResponse(response);\n      }\n    );\n  }\n\n  protected nextRequest(\n    response: DebugProtocol.NextResponse,\n    args: DebugProtocol.NextArguments\n  ): void {\n    this.GDB.next(args.threadId).then(() => {\n      this.sendResponse(response);\n    });\n  }\n\n  protected stepInRequest(\n    response: DebugProtocol.StepInResponse,\n    args: DebugProtocol.StepInArguments\n  ): void {\n    this.GDB.stepIn(args.threadId).then(() => {\n      this.sendResponse(response);\n    });\n  }\n\n  protected stepOutRequest(\n    response: DebugProtocol.StepOutResponse,\n    args: DebugProtocol.StepOutArguments\n  ): void {\n    this.GDB.stepOut(args.threadId).then(() => {\n      this.sendResponse(response);\n    });\n  }\n\n  protected continueRequest(\n    response: DebugProtocol.ContinueResponse,\n    args: DebugProtocol.ContinueArguments\n  ): void {\n    this.GDB.continue(args.threadId).then(() => {\n      this.sendResponse(response);\n    });\n  }\n\n  protected evaluateRequest(\n    response: DebugProtocol.EvaluateResponse,\n    args: DebugProtocol.EvaluateArguments\n  ): void {\n    // GDB enumerates frames starting at 0\n    if (args.frameId) {\n      --args.frameId;\n    }\n\n    switch (args.context) {\n      case 'repl':\n        // User is requesting evaluation of expr at debug console prompt.\n        // We cannot simply send it while the process is running -- we need\n        // to trigger an interrupt, issue the command, and continue execution\n        if (!this.GDB.isStopped()) {\n          this.GDB.pause(undefined, false).then(() => {\n            this.GDB.execUserCmd(args.expression, args.frameId).then(\n              (result: Record) => {\n                // continue execution\n                this.GDB.continue().then(() => {\n                  this.sendResponse(response);\n                });\n              }\n            );\n          });\n        } else {\n          this.GDB.execUserCmd(args.expression, args.frameId).then(\n            (result: Record) => {\n              this.sendResponse(response);\n            }\n          );\n        }\n\n        break;\n\n      case 'watch':\n      case 'hover':\n        // User has hovered over variable\n        this.GDB.evaluateExpr(args.expression, args.frameId).then(\n          (result: any) => {\n            response.body = {\n              result: result,\n              variablesReference: 0,\n            };\n            this.sendResponse(response);\n          }\n        );\n        break;\n    }\n  }\n\n  protected pauseRequest(\n    response: DebugProtocol.PauseResponse,\n    args: DebugProtocol.PauseArguments\n  ): void {\n    this.GDB.pause(args.threadId).then(() => {\n      this.sendResponse(response);\n    });\n  }\n\n  protected disconnectRequest(\n    response: DebugProtocol.DisconnectResponse,\n    args: DebugProtocol.DisconnectArguments\n  ): void {\n    // If this was an attach request do not kill the inferior\n    this.GDB.quit(args.terminateDebuggee === true);\n\n    // We do not need to wait until GDB quits\n    this.sendResponse(response);\n  }\n\n  protected setVariableRequest(\n    response: DebugProtocol.SetVariableResponse,\n    args: DebugProtocol.SetVariableArguments\n  ): void {\n    this.GDB.updateVar(args.name, args.value).then(() => {\n      // TODO: fetch actual value from GDB\n      response.body = {\n        value: args.value,\n      };\n\n      this.sendResponse(response);\n    });\n  }\n}\n","import * as vscode from 'vscode';\nimport {\n  WorkspaceFolder,\n  DebugConfiguration,\n  CancellationToken,\n  ProviderResult,\n  OutputChannel,\n  Terminal,\n} from 'vscode';\nimport {GDBDebugSession} from './GDBDebugSession';\nimport * as Net from 'net';\n\nclass GDBConfigurationProvider implements vscode.DebugConfigurationProvider {\n  private server?: Net.Server;\n  private terminal: Terminal;\n  private outputChannel: OutputChannel;\n\n  public constructor(terminal: Terminal, outputChannel: OutputChannel) {\n    this.terminal = terminal;\n    this.outputChannel = outputChannel;\n  }\n\n  /**\n   * Massage a debug configuration just before a debug session is being launched,\n   * e.g. add all missing attributes to the debug configuration.\n   */\n  resolveDebugConfiguration(\n    folder: WorkspaceFolder | undefined,\n    config: DebugConfiguration,\n    token?: CancellationToken\n  ): ProviderResult<DebugConfiguration> {\n    // if launch.json is missing or empty\n    if (!config.type && !config.request && !config.name) {\n      const editor = vscode.window.activeTextEditor;\n      if (\n        editor &&\n        (editor.document.languageId === 'cpp' ||\n          editor.document.languageId === 'c')\n      ) {\n        config.type = 'vgdb';\n        config.name = 'Launch';\n        config.request = 'launch';\n        config.program = 'a.out';\n        config.stopOnEntry = true;\n      }\n    }\n\n    if (!this.server) {\n      // start listening on a random port\n      this.server = Net.createServer(socket => {\n        const session = new GDBDebugSession(this.terminal, this.outputChannel);\n        session.setRunAsServer(true);\n        session.start(<NodeJS.ReadableStream>socket, socket);\n      }).listen(0);\n    }\n\n    const address = this.server.address() as Net.AddressInfo;\n    if (address) {\n      config.debugServer = address.port;\n    }\n\n    return config;\n  }\n}\n\nexport function activateDbg(\n  context: vscode.ExtensionContext,\n  factory?: vscode.DebugAdapterDescriptorFactory\n) {\n  context.subscriptions.push(\n    vscode.commands.registerCommand('extension.vgdb.getProgramName', config => {\n      return vscode.window.showInputBox({\n        placeHolder: 'Enter the path to the executable to debug',\n        value: 'a.out',\n      });\n    })\n  );\n\n  context.subscriptions.push(\n    vscode.commands.registerCommand('extension.vgdb.getProgramPID', config => {\n      return vscode.window.showInputBox({\n        placeHolder: 'Enter PID of program to attach to',\n        value: '',\n      });\n    })\n  );\n\n  // Create the debug output and terminal windows once on activation event\n  // to prevent spawning new terminals on each launch request\n  const provider = new GDBConfigurationProvider(\n    vscode.window.createTerminal('vGDB'),\n    vscode.window.createOutputChannel('vGDB')\n  );\n  context.subscriptions.push(\n    vscode.debug.registerDebugConfigurationProvider('vgdb', provider)\n  );\n}\n","import {Record} from './Record';\n\nexport enum AsyncRecordType {\n  EXEC = '*',\n  STATUS = '+',\n  NOTIFY = '=',\n}\n\nexport class AsyncRecord extends Record {\n  protected type?: AsyncRecordType;\n\n  public constructor(token: number) {\n    super(token);\n  }\n}\n","import {Record} from './Record';\nimport {AsyncRecord} from './AsyncRecord';\nimport {StreamRecord} from './StreamRecord';\nimport {Result} from './Result';\nimport {ResultRecord} from './ResultRecord';\n\n// MI grammar based on https://ftp.gnu.org/old-gnu/Manuals/gdb/html_chapter/gdb_22.html\n// First sets below -- Regex exprs defined with `` need to escape \\ char\nconst VARIABLE = /^([a-zA-Z_][a-zA-Z0-9_\\-]*)/;\nconst TOKEN = '\\\\d*';\nconst ASYNC_RECORD = '[\\\\*\\\\+\\\\=]';\nconst STREAM_RECORD = '[\\\\~\\\\@\\\\&]';\nconst CSTRING = /^\\\"((\\\\.|[^\"])*)\\\"/;\nconst OUT_OF_BAND_RECORD = new RegExp(\n  `^(?:(${TOKEN})(${ASYNC_RECORD})|(${STREAM_RECORD}))`\n);\nconst RESULT_RECORD = new RegExp(\n  `^(${TOKEN})\\\\^(done|running|connected|error|exit)`\n);\nconst ASYNC_CLASS = /^([_a-zA-Z0-9\\-]*)/;\nconst GDB_PROMPT = '(gdb)';\n\nexport const STOPPED = 'stopped';\nexport const RUNNING = 'running';\nexport const ERROR = 'error';\n\nconst VALUE_CSTRING = '\"';\nconst VALUE_TUPLE = '{';\nconst VALUE_LIST = '[';\n\n// Relative ordering of records in an OUT_OF_BAND_RECORD regexp\nconst TOKEN_POS = 1;\nconst ASYNC_RECORD_POS = 2;\nconst STREAM_RECORD_POS = 3;\n\nexport class MIParser {\n  private buffer: string = '';\n  private token: number = 0;\n\n  public parse(str: string): Record | null {\n    let record: Record | null;\n    this.buffer = str;\n\n    try {\n      // ( out-of-band-record )* [ result-record ] \"(gdb)\" nl\n      record = this.parseOutOfBandRecord();\n\n      if (!record) {\n        record = this.parseResultRecord();\n      }\n\n      if (!record) {\n        // (gdb) -- if not the inferior produced stdout\n        if (this.buffer.trimRight() == GDB_PROMPT) {\n          return null;\n        } else {\n          // Print to output window\n        }\n      }\n    } catch (error: any) {\n      // Throw to adapter\n      console.error('Parser error: ' + error.message);\n      throw error;\n    }\n\n    // DEBUG only\n    if (record) {\n      record.response = str;\n    }\n\n    return record;\n  }\n\n  private parseToken(match: any[]): number {\n    if (match[TOKEN_POS] != '') {\n      this.token = parseInt(match[TOKEN_POS]);\n    } else {\n      this.token = NaN;\n    }\n\n    return this.token;\n  }\n\n  private parseOutOfBandRecord() {\n    // async-record | stream-record\n    let match: any[] | null;\n\n    if ((match = OUT_OF_BAND_RECORD.exec(this.buffer))) {\n      this.parseToken(match);\n\n      if (match[ASYNC_RECORD_POS]) {\n        return this.parseAsyncRecord();\n      } else if (match[STREAM_RECORD_POS]) {\n        return this.parseStreamRecord();\n      } else {\n        throw new Error('Expected to find AsyncRecord or StreamRecord');\n      }\n    } else return null;\n  }\n\n  private parseAsyncRecord() {\n    // exec-async-output | status-async-output | notify-async-output\n    // First character denotes result class\n    let match: any, result: any;\n    const record = new AsyncRecord(this.token);\n    record.setType(this.buffer[0]);\n\n    this.buffer = this.buffer.substring(this.buffer[0].length);\n    if ((match = ASYNC_CLASS.exec(this.buffer))) {\n      // async-output ==> async-class ( \",\" result )* nl\n      record.setClass(match[1]);\n      this.buffer = this.buffer.substring(match[0].length);\n\n      while (this.buffer[0] == ',') {\n        // Consume , and read result\n        this.buffer = this.buffer.substr(1);\n\n        if ((result = this.parseResult())) {\n          record.addResult(result);\n        }\n      }\n    } else {\n      throw new Error('Failed to parse AsyncRecord');\n    }\n\n    return record;\n  }\n\n  private parseStreamRecord() {\n    // TODO\n    return new StreamRecord(1);\n  }\n\n  private parseResultRecord() {\n    // [ token ] \"^\" result-class ( \",\" result )* nl\n    let match: any, record: any;\n\n    if ((match = RESULT_RECORD.exec(this.buffer))) {\n      record = new ResultRecord(this.parseToken(match));\n      record.setClass(match[2]);\n\n      // Consume first part of match, parse results*\n      this.buffer = this.buffer.substring(match[0].length);\n\n      while (this.buffer[0] == ',') {\n        // Consume , and read result\n        this.buffer = this.buffer.substr(1);\n        const result = this.parseResult();\n        if (result) {\n          record.addResult(result);\n        }\n      }\n\n      return record;\n    } else {\n      return null;\n    }\n  }\n\n  private parseResult(): any[] | null {\n    let match: any[] | null;\n\n    if ((match = VARIABLE.exec(this.buffer))) {\n      // Also consume '='\n      this.buffer = this.buffer.substring(match[0].length + 1);\n      return [match[1], this.parseValue()];\n    } else {\n      return null;\n    }\n  }\n\n  private parseValue(): any {\n    // value ==> const | tuple | list\n    switch (this.buffer[0]) {\n      case VALUE_CSTRING:\n        return this.parseCString();\n\n      case VALUE_TUPLE:\n        return this.parseTuple();\n\n      case VALUE_LIST:\n        return this.parseList();\n\n      default:\n        return null;\n    }\n  }\n\n  private parseCString(): string {\n    let match: string[] | null;\n\n    if ((match = CSTRING.exec(this.buffer))) {\n      // Consume corresponding '\"'\n      this.buffer = this.buffer.substring(match[0].length);\n      return match[1];\n    } else {\n      throw new Error('could not parse cstring: ' + this.buffer);\n    }\n  }\n\n  private parseTuple(): Result[] {\n    // tuple ==> \"{}\" | \"{\" result ( \",\" result )* \"}\"\n    let result: any[] | null;\n    const tuple = <any>{};\n\n    do {\n      // Skip over , or {\n      this.buffer = this.buffer.substring(1);\n      if ((result = this.parseResult())) {\n        tuple[result[0]] = result[1];\n      }\n    } while (this.buffer[0] == ',');\n\n    // Conbsume last }\n    this.buffer = this.buffer.substring(1);\n\n    return tuple;\n  }\n\n  private parseList(): any[] {\n    // list ==> \"[]\" | \"[\" value ( \",\" value )* \"]\" | \"[\" result ( \",\" result )* \"]\"\n    let match: any[] | null;\n    const list: any = [];\n\n    // Consume first [\n    this.buffer = this.buffer.substring(1);\n\n    // Is this a list of values or list of results?\n    if (\n      [VALUE_CSTRING, VALUE_LIST, VALUE_TUPLE].indexOf(this.buffer[0]) != -1\n    ) {\n      // Value list\n      while ((match = this.parseValue())) {\n        this.buffer = this.buffer.substring(1);\n        list.push(match);\n      }\n    } else {\n      // Result list\n      while ((match = this.parseResult())) {\n        this.buffer = this.buffer.substring(1);\n        list.push(match);\n      }\n    }\n\n    // If empty list, eat analogous ]\n    if (!list.length) {\n      this.buffer = this.buffer.substring(1);\n    }\n\n    return list;\n  }\n}\n","export abstract class Record {\n  public response: string = '';\n  protected token: number;\n  protected abstract type?: any;\n  protected results: Map<string, any>;\n  private klass?: string;\n\n  public constructor(token: number) {\n    this.token = token;\n    this.results = new Map();\n  }\n\n  public getToken() {\n    return this.token;\n  }\n\n  public setType(type: any) {\n    this.type = type;\n  }\n\n  public getType() {\n    return this.type;\n  }\n\n  public setClass(klass: string) {\n    this.klass = klass;\n  }\n\n  public getClass() {\n    return this.klass;\n  }\n\n  public addResult(result: any) {\n    this.results.set(result[0], result[1]);\n  }\n\n  public getResult(key: string): any {\n    return this.results.get(key);\n  }\n\n  // Strip slashes, remove token identifier\n  public prettyPrint(): string {\n    //return this.response.substring(2, this.response.length - 1);\n    return this.response;\n  }\n}\n","import {Record} from './Record';\n\nexport enum ResultRecordType {\n  DONE = 'done',\n  RUNNING = 'running',\n  CONNECTED = 'connected',\n  ERROR = 'error',\n  EXIT = 'exit',\n}\n\nexport class ResultRecord extends Record {\n  protected type?: ResultRecordType;\n\n  public constructor(token: number) {\n    super(token);\n  }\n}\n","import {Record} from './Record';\n\nenum StreamRecordType {\n  CONSOLE = '~',\n  TARGET = '@',\n  LOG = '&',\n}\n\nexport class StreamRecord extends Record {\n  protected type?: StreamRecordType;\n  protected typeEnum = StreamRecordType;\n}\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DebugSession = exports.ErrorDestination = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.CompletionItem = exports.Module = exports.Breakpoint = exports.Variable = exports.Thread = exports.StackFrame = exports.Scope = exports.Source = void 0;\nconst protocol_1 = require(\"./protocol\");\nconst messages_1 = require(\"./messages\");\nconst runDebugAdapter_1 = require(\"./runDebugAdapter\");\nconst url_1 = require(\"url\");\nclass Source {\n    constructor(name, path, id = 0, origin, data) {\n        this.name = name;\n        this.path = path;\n        this.sourceReference = id;\n        if (origin) {\n            this.origin = origin;\n        }\n        if (data) {\n            this.adapterData = data;\n        }\n    }\n}\nexports.Source = Source;\nclass Scope {\n    constructor(name, reference, expensive = false) {\n        this.name = name;\n        this.variablesReference = reference;\n        this.expensive = expensive;\n    }\n}\nexports.Scope = Scope;\nclass StackFrame {\n    constructor(i, nm, src, ln = 0, col = 0) {\n        this.id = i;\n        this.source = src;\n        this.line = ln;\n        this.column = col;\n        this.name = nm;\n    }\n}\nexports.StackFrame = StackFrame;\nclass Thread {\n    constructor(id, name) {\n        this.id = id;\n        if (name) {\n            this.name = name;\n        }\n        else {\n            this.name = 'Thread #' + id;\n        }\n    }\n}\nexports.Thread = Thread;\nclass Variable {\n    constructor(name, value, ref = 0, indexedVariables, namedVariables) {\n        this.name = name;\n        this.value = value;\n        this.variablesReference = ref;\n        if (typeof namedVariables === 'number') {\n            this.namedVariables = namedVariables;\n        }\n        if (typeof indexedVariables === 'number') {\n            this.indexedVariables = indexedVariables;\n        }\n    }\n}\nexports.Variable = Variable;\nclass Breakpoint {\n    constructor(verified, line, column, source) {\n        this.verified = verified;\n        const e = this;\n        if (typeof line === 'number') {\n            e.line = line;\n        }\n        if (typeof column === 'number') {\n            e.column = column;\n        }\n        if (source) {\n            e.source = source;\n        }\n    }\n}\nexports.Breakpoint = Breakpoint;\nclass Module {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n}\nexports.Module = Module;\nclass CompletionItem {\n    constructor(label, start, length = 0) {\n        this.label = label;\n        this.start = start;\n        this.length = length;\n    }\n}\nexports.CompletionItem = CompletionItem;\nclass StoppedEvent extends messages_1.Event {\n    constructor(reason, threadId, exceptionText) {\n        super('stopped');\n        this.body = {\n            reason: reason\n        };\n        if (typeof threadId === 'number') {\n            this.body.threadId = threadId;\n        }\n        if (typeof exceptionText === 'string') {\n            this.body.text = exceptionText;\n        }\n    }\n}\nexports.StoppedEvent = StoppedEvent;\nclass ContinuedEvent extends messages_1.Event {\n    constructor(threadId, allThreadsContinued) {\n        super('continued');\n        this.body = {\n            threadId: threadId\n        };\n        if (typeof allThreadsContinued === 'boolean') {\n            this.body.allThreadsContinued = allThreadsContinued;\n        }\n    }\n}\nexports.ContinuedEvent = ContinuedEvent;\nclass InitializedEvent extends messages_1.Event {\n    constructor() {\n        super('initialized');\n    }\n}\nexports.InitializedEvent = InitializedEvent;\nclass TerminatedEvent extends messages_1.Event {\n    constructor(restart) {\n        super('terminated');\n        if (typeof restart === 'boolean' || restart) {\n            const e = this;\n            e.body = {\n                restart: restart\n            };\n        }\n    }\n}\nexports.TerminatedEvent = TerminatedEvent;\nclass OutputEvent extends messages_1.Event {\n    constructor(output, category = 'console', data) {\n        super('output');\n        this.body = {\n            category: category,\n            output: output\n        };\n        if (data !== undefined) {\n            this.body.data = data;\n        }\n    }\n}\nexports.OutputEvent = OutputEvent;\nclass ThreadEvent extends messages_1.Event {\n    constructor(reason, threadId) {\n        super('thread');\n        this.body = {\n            reason: reason,\n            threadId: threadId\n        };\n    }\n}\nexports.ThreadEvent = ThreadEvent;\nclass BreakpointEvent extends messages_1.Event {\n    constructor(reason, breakpoint) {\n        super('breakpoint');\n        this.body = {\n            reason: reason,\n            breakpoint: breakpoint\n        };\n    }\n}\nexports.BreakpointEvent = BreakpointEvent;\nclass ModuleEvent extends messages_1.Event {\n    constructor(reason, module) {\n        super('module');\n        this.body = {\n            reason: reason,\n            module: module\n        };\n    }\n}\nexports.ModuleEvent = ModuleEvent;\nclass LoadedSourceEvent extends messages_1.Event {\n    constructor(reason, source) {\n        super('loadedSource');\n        this.body = {\n            reason: reason,\n            source: source\n        };\n    }\n}\nexports.LoadedSourceEvent = LoadedSourceEvent;\nclass CapabilitiesEvent extends messages_1.Event {\n    constructor(capabilities) {\n        super('capabilities');\n        this.body = {\n            capabilities: capabilities\n        };\n    }\n}\nexports.CapabilitiesEvent = CapabilitiesEvent;\nclass ProgressStartEvent extends messages_1.Event {\n    constructor(progressId, title, message) {\n        super('progressStart');\n        this.body = {\n            progressId: progressId,\n            title: title\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressStartEvent = ProgressStartEvent;\nclass ProgressUpdateEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressUpdate');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressUpdateEvent = ProgressUpdateEvent;\nclass ProgressEndEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressEnd');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressEndEvent = ProgressEndEvent;\nclass InvalidatedEvent extends messages_1.Event {\n    constructor(areas, threadId, stackFrameId) {\n        super('invalidated');\n        this.body = {};\n        if (areas) {\n            this.body.areas = areas;\n        }\n        if (threadId) {\n            this.body.threadId = threadId;\n        }\n        if (stackFrameId) {\n            this.body.stackFrameId = stackFrameId;\n        }\n    }\n}\nexports.InvalidatedEvent = InvalidatedEvent;\nvar ErrorDestination;\n(function (ErrorDestination) {\n    ErrorDestination[ErrorDestination[\"User\"] = 1] = \"User\";\n    ErrorDestination[ErrorDestination[\"Telemetry\"] = 2] = \"Telemetry\";\n})(ErrorDestination = exports.ErrorDestination || (exports.ErrorDestination = {}));\n;\nclass DebugSession extends protocol_1.ProtocolServer {\n    constructor(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super();\n        const linesAndColumnsStartAt1 = typeof obsolete_debuggerLinesAndColumnsStartAt1 === 'boolean' ? obsolete_debuggerLinesAndColumnsStartAt1 : false;\n        this._debuggerLinesStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerColumnsStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerPathsAreURIs = false;\n        this._clientLinesStartAt1 = true;\n        this._clientColumnsStartAt1 = true;\n        this._clientPathsAreURIs = false;\n        this._isServer = typeof obsolete_isServer === 'boolean' ? obsolete_isServer : false;\n        this.on('close', () => {\n            this.shutdown();\n        });\n        this.on('error', (error) => {\n            this.shutdown();\n        });\n    }\n    setDebuggerPathFormat(format) {\n        this._debuggerPathsAreURIs = format !== 'path';\n    }\n    setDebuggerLinesStartAt1(enable) {\n        this._debuggerLinesStartAt1 = enable;\n    }\n    setDebuggerColumnsStartAt1(enable) {\n        this._debuggerColumnsStartAt1 = enable;\n    }\n    setRunAsServer(enable) {\n        this._isServer = enable;\n    }\n    /**\n     * A virtual constructor...\n     */\n    static run(debugSession) {\n        runDebugAdapter_1.runDebugAdapter(debugSession);\n    }\n    shutdown() {\n        if (this._isServer || this._isRunningInline()) {\n            // shutdown ignored in server mode\n        }\n        else {\n            // wait a bit before shutting down\n            setTimeout(() => {\n                process.exit(0);\n            }, 100);\n        }\n    }\n    sendErrorResponse(response, codeOrMessage, format, variables, dest = ErrorDestination.User) {\n        let msg;\n        if (typeof codeOrMessage === 'number') {\n            msg = {\n                id: codeOrMessage,\n                format: format\n            };\n            if (variables) {\n                msg.variables = variables;\n            }\n            if (dest & ErrorDestination.User) {\n                msg.showUser = true;\n            }\n            if (dest & ErrorDestination.Telemetry) {\n                msg.sendTelemetry = true;\n            }\n        }\n        else {\n            msg = codeOrMessage;\n        }\n        response.success = false;\n        response.message = DebugSession.formatPII(msg.format, true, msg.variables);\n        if (!response.body) {\n            response.body = {};\n        }\n        response.body.error = msg;\n        this.sendResponse(response);\n    }\n    runInTerminalRequest(args, timeout, cb) {\n        this.sendRequest('runInTerminal', args, timeout, cb);\n    }\n    dispatchRequest(request) {\n        const response = new messages_1.Response(request);\n        try {\n            if (request.command === 'initialize') {\n                var args = request.arguments;\n                if (typeof args.linesStartAt1 === 'boolean') {\n                    this._clientLinesStartAt1 = args.linesStartAt1;\n                }\n                if (typeof args.columnsStartAt1 === 'boolean') {\n                    this._clientColumnsStartAt1 = args.columnsStartAt1;\n                }\n                if (args.pathFormat !== 'path') {\n                    this.sendErrorResponse(response, 2018, 'debug adapter only supports native paths', null, ErrorDestination.Telemetry);\n                }\n                else {\n                    const initializeResponse = response;\n                    initializeResponse.body = {};\n                    this.initializeRequest(initializeResponse, args);\n                }\n            }\n            else if (request.command === 'launch') {\n                this.launchRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'attach') {\n                this.attachRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disconnect') {\n                this.disconnectRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'terminate') {\n                this.terminateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restart') {\n                this.restartRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setBreakpoints') {\n                this.setBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setFunctionBreakpoints') {\n                this.setFunctionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExceptionBreakpoints') {\n                this.setExceptionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'configurationDone') {\n                this.configurationDoneRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'continue') {\n                this.continueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'next') {\n                this.nextRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepIn') {\n                this.stepInRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepOut') {\n                this.stepOutRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepBack') {\n                this.stepBackRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'reverseContinue') {\n                this.reverseContinueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restartFrame') {\n                this.restartFrameRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'goto') {\n                this.gotoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'pause') {\n                this.pauseRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stackTrace') {\n                this.stackTraceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'scopes') {\n                this.scopesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'variables') {\n                this.variablesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setVariable') {\n                this.setVariableRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExpression') {\n                this.setExpressionRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'source') {\n                this.sourceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'threads') {\n                this.threadsRequest(response, request);\n            }\n            else if (request.command === 'terminateThreads') {\n                this.terminateThreadsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'evaluate') {\n                this.evaluateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepInTargets') {\n                this.stepInTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'gotoTargets') {\n                this.gotoTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'completions') {\n                this.completionsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'exceptionInfo') {\n                this.exceptionInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'loadedSources') {\n                this.loadedSourcesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'dataBreakpointInfo') {\n                this.dataBreakpointInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setDataBreakpoints') {\n                this.setDataBreakpointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'readMemory') {\n                this.readMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'writeMemory') {\n                this.writeMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disassemble') {\n                this.disassembleRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'cancel') {\n                this.cancelRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'breakpointLocations') {\n                this.breakpointLocationsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setInstructionBreakpoints') {\n                this.setInstructionBreakpointsRequest(response, request.arguments, request);\n            }\n            else {\n                this.customRequest(request.command, response, request.arguments, request);\n            }\n        }\n        catch (e) {\n            this.sendErrorResponse(response, 1104, '{_stack}', { _exception: e.message, _stack: e.stack }, ErrorDestination.Telemetry);\n        }\n    }\n    initializeRequest(response, args) {\n        // This default debug adapter does not support conditional breakpoints.\n        response.body.supportsConditionalBreakpoints = false;\n        // This default debug adapter does not support hit conditional breakpoints.\n        response.body.supportsHitConditionalBreakpoints = false;\n        // This default debug adapter does not support function breakpoints.\n        response.body.supportsFunctionBreakpoints = false;\n        // This default debug adapter implements the 'configurationDone' request.\n        response.body.supportsConfigurationDoneRequest = true;\n        // This default debug adapter does not support hovers based on the 'evaluate' request.\n        response.body.supportsEvaluateForHovers = false;\n        // This default debug adapter does not support the 'stepBack' request.\n        response.body.supportsStepBack = false;\n        // This default debug adapter does not support the 'setVariable' request.\n        response.body.supportsSetVariable = false;\n        // This default debug adapter does not support the 'restartFrame' request.\n        response.body.supportsRestartFrame = false;\n        // This default debug adapter does not support the 'stepInTargets' request.\n        response.body.supportsStepInTargetsRequest = false;\n        // This default debug adapter does not support the 'gotoTargets' request.\n        response.body.supportsGotoTargetsRequest = false;\n        // This default debug adapter does not support the 'completions' request.\n        response.body.supportsCompletionsRequest = false;\n        // This default debug adapter does not support the 'restart' request.\n        response.body.supportsRestartRequest = false;\n        // This default debug adapter does not support the 'exceptionOptions' attribute on the 'setExceptionBreakpoints' request.\n        response.body.supportsExceptionOptions = false;\n        // This default debug adapter does not support the 'format' attribute on the 'variables', 'evaluate', and 'stackTrace' request.\n        response.body.supportsValueFormattingOptions = false;\n        // This debug adapter does not support the 'exceptionInfo' request.\n        response.body.supportsExceptionInfoRequest = false;\n        // This debug adapter does not support the 'TerminateDebuggee' attribute on the 'disconnect' request.\n        response.body.supportTerminateDebuggee = false;\n        // This debug adapter does not support delayed loading of stack frames.\n        response.body.supportsDelayedStackTraceLoading = false;\n        // This debug adapter does not support the 'loadedSources' request.\n        response.body.supportsLoadedSourcesRequest = false;\n        // This debug adapter does not support the 'logMessage' attribute of the SourceBreakpoint.\n        response.body.supportsLogPoints = false;\n        // This debug adapter does not support the 'terminateThreads' request.\n        response.body.supportsTerminateThreadsRequest = false;\n        // This debug adapter does not support the 'setExpression' request.\n        response.body.supportsSetExpression = false;\n        // This debug adapter does not support the 'terminate' request.\n        response.body.supportsTerminateRequest = false;\n        // This debug adapter does not support data breakpoints.\n        response.body.supportsDataBreakpoints = false;\n        /** This debug adapter does not support the 'readMemory' request. */\n        response.body.supportsReadMemoryRequest = false;\n        /** The debug adapter does not support the 'disassemble' request. */\n        response.body.supportsDisassembleRequest = false;\n        /** The debug adapter does not support the 'cancel' request. */\n        response.body.supportsCancelRequest = false;\n        /** The debug adapter does not support the 'breakpointLocations' request. */\n        response.body.supportsBreakpointLocationsRequest = false;\n        /** The debug adapter does not support the 'clipboard' context value in the 'evaluate' request. */\n        response.body.supportsClipboardContext = false;\n        /** The debug adapter does not support stepping granularities for the stepping requests. */\n        response.body.supportsSteppingGranularity = false;\n        /** The debug adapter does not support the 'setInstructionBreakpoints' request. */\n        response.body.supportsInstructionBreakpoints = false;\n        /** The debug adapter does not support 'filterOptions' on the 'setExceptionBreakpoints' request. */\n        response.body.supportsExceptionFilterOptions = false;\n        this.sendResponse(response);\n    }\n    disconnectRequest(response, args, request) {\n        this.sendResponse(response);\n        this.shutdown();\n    }\n    launchRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    attachRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    terminateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setFunctionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExceptionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    configurationDoneRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    continueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    nextRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepOutRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepBackRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    reverseContinueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartFrameRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    pauseRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    sourceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    threadsRequest(response, request) {\n        this.sendResponse(response);\n    }\n    terminateThreadsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stackTraceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    scopesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    variablesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setVariableRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExpressionRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    evaluateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    completionsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    exceptionInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    loadedSourcesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    dataBreakpointInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setDataBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    readMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    writeMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    disassembleRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    cancelRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    breakpointLocationsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setInstructionBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    /**\n     * Override this hook to implement custom requests.\n     */\n    customRequest(command, response, args, request) {\n        this.sendErrorResponse(response, 1014, 'unrecognized request', null, ErrorDestination.Telemetry);\n    }\n    //---- protected -------------------------------------------------------------------------------------------------\n    convertClientLineToDebugger(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line + 1;\n        }\n        return this._clientLinesStartAt1 ? line - 1 : line;\n    }\n    convertDebuggerLineToClient(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line - 1;\n        }\n        return this._clientLinesStartAt1 ? line + 1 : line;\n    }\n    convertClientColumnToDebugger(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column + 1;\n        }\n        return this._clientColumnsStartAt1 ? column - 1 : column;\n    }\n    convertDebuggerColumnToClient(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column - 1;\n        }\n        return this._clientColumnsStartAt1 ? column + 1 : column;\n    }\n    convertClientPathToDebugger(clientPath) {\n        if (this._clientPathsAreURIs !== this._debuggerPathsAreURIs) {\n            if (this._clientPathsAreURIs) {\n                return DebugSession.uri2path(clientPath);\n            }\n            else {\n                return DebugSession.path2uri(clientPath);\n            }\n        }\n        return clientPath;\n    }\n    convertDebuggerPathToClient(debuggerPath) {\n        if (this._debuggerPathsAreURIs !== this._clientPathsAreURIs) {\n            if (this._debuggerPathsAreURIs) {\n                return DebugSession.uri2path(debuggerPath);\n            }\n            else {\n                return DebugSession.path2uri(debuggerPath);\n            }\n        }\n        return debuggerPath;\n    }\n    //---- private -------------------------------------------------------------------------------\n    static path2uri(path) {\n        if (process.platform === 'win32') {\n            if (/^[A-Z]:/.test(path)) {\n                path = path[0].toLowerCase() + path.substr(1);\n            }\n            path = path.replace(/\\\\/g, '/');\n        }\n        path = encodeURI(path);\n        let uri = new url_1.URL(`file:`); // ignore 'path' for now\n        uri.pathname = path; // now use 'path' to get the correct percent encoding (see https://url.spec.whatwg.org)\n        return uri.toString();\n    }\n    static uri2path(sourceUri) {\n        let uri = new url_1.URL(sourceUri);\n        let s = decodeURIComponent(uri.pathname);\n        if (process.platform === 'win32') {\n            if (/^\\/[a-zA-Z]:/.test(s)) {\n                s = s[1].toLowerCase() + s.substr(2);\n            }\n            s = s.replace(/\\//g, '\\\\');\n        }\n        return s;\n    }\n    /*\n    * If argument starts with '_' it is OK to send its value to telemetry.\n    */\n    static formatPII(format, excludePII, args) {\n        return format.replace(DebugSession._formatPIIRegexp, function (match, paramName) {\n            if (excludePII && paramName.length > 0 && paramName[0] !== '_') {\n                return match;\n            }\n            return args[paramName] && args.hasOwnProperty(paramName) ?\n                args[paramName] :\n                match;\n        });\n    }\n}\nexports.DebugSession = DebugSession;\nDebugSession._formatPIIRegexp = /{([^}]+)}/g;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = void 0;\nclass Handles {\n    constructor(startHandle) {\n        this.START_HANDLE = 1000;\n        this._handleMap = new Map();\n        this._nextHandle = typeof startHandle === 'number' ? startHandle : this.START_HANDLE;\n    }\n    reset() {\n        this._nextHandle = this.START_HANDLE;\n        this._handleMap = new Map();\n    }\n    create(value) {\n        var handle = this._nextHandle++;\n        this._handleMap.set(handle, value);\n        return handle;\n    }\n    get(handle, dflt) {\n        return this._handleMap.get(handle) || dflt;\n    }\n}\nexports.Handles = Handles;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9oYW5kbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBRWhHLE1BQWEsT0FBTztJQU9uQixZQUFtQixXQUFvQjtRQUwvQixpQkFBWSxHQUFHLElBQUksQ0FBQztRQUdwQixlQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztRQUd6QyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sV0FBVyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3RGLENBQUM7SUFFTSxLQUFLO1FBQ1gsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztJQUN4QyxDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQVE7UUFDckIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNuQyxPQUFPLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFFTSxHQUFHLENBQUMsTUFBYyxFQUFFLElBQVE7UUFDbEMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDNUMsQ0FBQztDQUNEO0FBekJELDBCQXlCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5leHBvcnQgY2xhc3MgSGFuZGxlczxUPiB7XG5cblx0cHJpdmF0ZSBTVEFSVF9IQU5ETEUgPSAxMDAwO1xuXG5cdHByaXZhdGUgX25leHRIYW5kbGUgOiBudW1iZXI7XG5cdHByaXZhdGUgX2hhbmRsZU1hcCA9IG5ldyBNYXA8bnVtYmVyLCBUPigpO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihzdGFydEhhbmRsZT86IG51bWJlcikge1xuXHRcdHRoaXMuX25leHRIYW5kbGUgPSB0eXBlb2Ygc3RhcnRIYW5kbGUgPT09ICdudW1iZXInID8gc3RhcnRIYW5kbGUgOiB0aGlzLlNUQVJUX0hBTkRMRTtcblx0fVxuXG5cdHB1YmxpYyByZXNldCgpOiB2b2lkIHtcblx0XHR0aGlzLl9uZXh0SGFuZGxlID0gdGhpcy5TVEFSVF9IQU5ETEU7XG5cdFx0dGhpcy5faGFuZGxlTWFwID0gbmV3IE1hcDxudW1iZXIsIFQ+KCk7XG5cdH1cblxuXHRwdWJsaWMgY3JlYXRlKHZhbHVlOiBUKTogbnVtYmVyIHtcblx0XHR2YXIgaGFuZGxlID0gdGhpcy5fbmV4dEhhbmRsZSsrO1xuXHRcdHRoaXMuX2hhbmRsZU1hcC5zZXQoaGFuZGxlLCB2YWx1ZSk7XG5cdFx0cmV0dXJuIGhhbmRsZTtcblx0fVxuXG5cdHB1YmxpYyBnZXQoaGFuZGxlOiBudW1iZXIsIGRmbHQ/OiBUKTogVCB7XG5cdFx0cmV0dXJuIHRoaXMuX2hhbmRsZU1hcC5nZXQoaGFuZGxlKSB8fCBkZmx0O1xuXHR9XG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalLogger = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\nconst logger_1 = require(\"./logger\");\n/**\n * Manages logging, whether to console.log, file, or VS Code console.\n * Encapsulates the state specific to each logging session\n */\nclass InternalLogger {\n    constructor(logCallback, isServer) {\n        /** Dispose and allow exit to continue normally */\n        this.beforeExitCallback = () => this.dispose();\n        this._logCallback = logCallback;\n        this._logToConsole = isServer;\n        this._minLogLevel = logger_1.LogLevel.Warn;\n        this.disposeCallback = (signal, code) => {\n            this.dispose();\n            // Exit with 128 + value of the signal code.\n            // https://nodejs.org/api/process.html#process_exit_codes\n            code = code || 2; // SIGINT\n            code += 128;\n            process.exit(code);\n        };\n    }\n    setup(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._minLogLevel = options.consoleMinLogLevel;\n            this._prependTimestamp = options.prependTimestamp;\n            // Open a log file in the specified location. Overwritten on each run.\n            if (options.logFilePath) {\n                if (!path.isAbsolute(options.logFilePath)) {\n                    this.log(`logFilePath must be an absolute path: ${options.logFilePath}`, logger_1.LogLevel.Error);\n                }\n                else {\n                    const handleError = err => this.sendLog(`Error creating log file at path: ${options.logFilePath}. Error: ${err.toString()}\\n`, logger_1.LogLevel.Error);\n                    try {\n                        yield mkdirp(path.dirname(options.logFilePath));\n                        this.log(`Verbose logs are written to:\\n`, logger_1.LogLevel.Warn);\n                        this.log(options.logFilePath + '\\n', logger_1.LogLevel.Warn);\n                        this._logFileStream = fs.createWriteStream(options.logFilePath);\n                        this.logDateTime();\n                        this.setupShutdownListeners();\n                        this._logFileStream.on('error', err => {\n                            handleError(err);\n                        });\n                    }\n                    catch (err) {\n                        handleError(err);\n                    }\n                }\n            }\n        });\n    }\n    logDateTime() {\n        let d = new Date();\n        let dateString = d.getUTCFullYear() + '-' + `${d.getUTCMonth() + 1}` + '-' + d.getUTCDate();\n        const timeAndDateStamp = dateString + ', ' + getFormattedTimeString();\n        this.log(timeAndDateStamp + '\\n', logger_1.LogLevel.Verbose, false);\n    }\n    setupShutdownListeners() {\n        process.addListener('beforeExit', this.beforeExitCallback);\n        process.addListener('SIGTERM', this.disposeCallback);\n        process.addListener('SIGINT', this.disposeCallback);\n    }\n    removeShutdownListeners() {\n        process.removeListener('beforeExit', this.beforeExitCallback);\n        process.removeListener('SIGTERM', this.disposeCallback);\n        process.removeListener('SIGINT', this.disposeCallback);\n    }\n    dispose() {\n        return new Promise(resolve => {\n            this.removeShutdownListeners();\n            if (this._logFileStream) {\n                this._logFileStream.end(resolve);\n                this._logFileStream = null;\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    log(msg, level, prependTimestamp = true) {\n        if (this._minLogLevel === logger_1.LogLevel.Stop) {\n            return;\n        }\n        if (level >= this._minLogLevel) {\n            this.sendLog(msg, level);\n        }\n        if (this._logToConsole) {\n            const logFn = level === logger_1.LogLevel.Error ? console.error :\n                level === logger_1.LogLevel.Warn ? console.warn :\n                    null;\n            if (logFn) {\n                logFn(logger_1.trimLastNewline(msg));\n            }\n        }\n        // If an error, prepend with '[Error]'\n        if (level === logger_1.LogLevel.Error) {\n            msg = `[${logger_1.LogLevel[level]}] ${msg}`;\n        }\n        if (this._prependTimestamp && prependTimestamp) {\n            msg = '[' + getFormattedTimeString() + '] ' + msg;\n        }\n        if (this._logFileStream) {\n            this._logFileStream.write(msg);\n        }\n    }\n    sendLog(msg, level) {\n        // Truncate long messages, they can hang VS Code\n        if (msg.length > 1500) {\n            const endsInNewline = !!msg.match(/(\\n|\\r\\n)$/);\n            msg = msg.substr(0, 1500) + '[...]';\n            if (endsInNewline) {\n                msg = msg + '\\n';\n            }\n        }\n        if (this._logCallback) {\n            const event = new logger_1.LogOutputEvent(msg, level);\n            this._logCallback(event);\n        }\n    }\n}\nexports.InternalLogger = InternalLogger;\nfunction getFormattedTimeString() {\n    let d = new Date();\n    let hourString = _padZeroes(2, String(d.getUTCHours()));\n    let minuteString = _padZeroes(2, String(d.getUTCMinutes()));\n    let secondString = _padZeroes(2, String(d.getUTCSeconds()));\n    let millisecondString = _padZeroes(3, String(d.getUTCMilliseconds()));\n    return hourString + ':' + minuteString + ':' + secondString + '.' + millisecondString + ' UTC';\n}\nfunction _padZeroes(minDesiredLength, numberToPad) {\n    if (numberToPad.length >= minDesiredLength) {\n        return numberToPad;\n    }\n    else {\n        return String('0'.repeat(minDesiredLength) + numberToPad).slice(-minDesiredLength);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimLastNewline = exports.LogOutputEvent = exports.logger = exports.Logger = exports.LogLevel = void 0;\nconst internalLogger_1 = require(\"./internalLogger\");\nconst debugSession_1 = require(\"./debugSession\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Log\"] = 1] = \"Log\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Stop\"] = 4] = \"Stop\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nclass Logger {\n    constructor() {\n        this._pendingLogQ = [];\n    }\n    log(msg, level = LogLevel.Log) {\n        msg = msg + '\\n';\n        this._write(msg, level);\n    }\n    verbose(msg) {\n        this.log(msg, LogLevel.Verbose);\n    }\n    warn(msg) {\n        this.log(msg, LogLevel.Warn);\n    }\n    error(msg) {\n        this.log(msg, LogLevel.Error);\n    }\n    dispose() {\n        if (this._currentLogger) {\n            const disposeP = this._currentLogger.dispose();\n            this._currentLogger = null;\n            return disposeP;\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * `log` adds a newline, `write` doesn't\n     */\n    _write(msg, level = LogLevel.Log) {\n        // [null, undefined] => string\n        msg = msg + '';\n        if (this._pendingLogQ) {\n            this._pendingLogQ.push({ msg, level });\n        }\n        else if (this._currentLogger) {\n            this._currentLogger.log(msg, level);\n        }\n    }\n    /**\n     * Set the logger's minimum level to log in the console, and whether to log to the file. Log messages are queued before this is\n     * called the first time, because minLogLevel defaults to Warn.\n     */\n    setup(consoleMinLogLevel, _logFilePath, prependTimestamp = true) {\n        const logFilePath = typeof _logFilePath === 'string' ?\n            _logFilePath :\n            (_logFilePath && this._logFilePathFromInit);\n        if (this._currentLogger) {\n            const options = {\n                consoleMinLogLevel,\n                logFilePath,\n                prependTimestamp\n            };\n            this._currentLogger.setup(options).then(() => {\n                // Now that we have a minimum logLevel, we can clear out the queue of pending messages\n                if (this._pendingLogQ) {\n                    const logQ = this._pendingLogQ;\n                    this._pendingLogQ = null;\n                    logQ.forEach(item => this._write(item.msg, item.level));\n                }\n            });\n        }\n    }\n    init(logCallback, logFilePath, logToConsole) {\n        // Re-init, create new global Logger\n        this._pendingLogQ = this._pendingLogQ || [];\n        this._currentLogger = new internalLogger_1.InternalLogger(logCallback, logToConsole);\n        this._logFilePathFromInit = logFilePath;\n    }\n}\nexports.Logger = Logger;\nexports.logger = new Logger();\nclass LogOutputEvent extends debugSession_1.OutputEvent {\n    constructor(msg, level) {\n        const category = level === LogLevel.Error ? 'stderr' :\n            level === LogLevel.Warn ? 'console' :\n                'stdout';\n        super(msg, category);\n    }\n}\nexports.LogOutputEvent = LogOutputEvent;\nfunction trimLastNewline(str) {\n    return str.replace(/(\\n|\\r\\n)$/, '');\n}\nexports.trimLastNewline = trimLastNewline;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingDebugSession = void 0;\nconst Logger = require(\"./logger\");\nconst logger = Logger.logger;\nconst debugSession_1 = require(\"./debugSession\");\nclass LoggingDebugSession extends debugSession_1.DebugSession {\n    constructor(obsolete_logFilePath, obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer);\n        this.obsolete_logFilePath = obsolete_logFilePath;\n        this.on('error', (event) => {\n            logger.error(event.body);\n        });\n    }\n    start(inStream, outStream) {\n        super.start(inStream, outStream);\n        logger.init(e => this.sendEvent(e), this.obsolete_logFilePath, this._isServer);\n    }\n    /**\n     * Overload sendEvent to log\n     */\n    sendEvent(event) {\n        if (!(event instanceof Logger.LogOutputEvent)) {\n            // Don't create an infinite loop...\n            let objectToLog = event;\n            if (event instanceof debugSession_1.OutputEvent && event.body && event.body.data && event.body.data.doNotLogOutput) {\n                delete event.body.data.doNotLogOutput;\n                objectToLog = Object.assign({}, event);\n                objectToLog.body = Object.assign(Object.assign({}, event.body), { output: '<output not logged>' });\n            }\n            logger.verbose(`To client: ${JSON.stringify(objectToLog)}`);\n        }\n        super.sendEvent(event);\n    }\n    /**\n     * Overload sendRequest to log\n     */\n    sendRequest(command, args, timeout, cb) {\n        logger.verbose(`To client: ${JSON.stringify(command)}(${JSON.stringify(args)}), timeout: ${timeout}`);\n        super.sendRequest(command, args, timeout, cb);\n    }\n    /**\n     * Overload sendResponse to log\n     */\n    sendResponse(response) {\n        logger.verbose(`To client: ${JSON.stringify(response)}`);\n        super.sendResponse(response);\n    }\n    dispatchRequest(request) {\n        logger.verbose(`From client: ${request.command}(${JSON.stringify(request.arguments)})`);\n        super.dispatchRequest(request);\n    }\n}\nexports.LoggingDebugSession = LoggingDebugSession;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZ0RlYnVnU2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnaW5nRGVidWdTZXNzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBSWhHLG1DQUFtQztBQUNuQyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQzdCLGlEQUF5RDtBQUV6RCxNQUFhLG1CQUFvQixTQUFRLDJCQUFZO0lBQ3BELFlBQTJCLG9CQUE2QixFQUFFLHdDQUFrRCxFQUFFLGlCQUEyQjtRQUN4SSxLQUFLLENBQUMsd0NBQXdDLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUR6Qyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQVM7UUFHdkQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUEwQixFQUFFLEVBQUU7WUFDL0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQStCLEVBQUUsU0FBZ0M7UUFDN0UsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRUQ7O09BRUc7SUFDSSxTQUFTLENBQUMsS0FBMEI7UUFDMUMsSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUM5QyxtQ0FBbUM7WUFFbkMsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQ3hCLElBQUksS0FBSyxZQUFZLDBCQUFXLElBQUksS0FBSyxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7Z0JBQ3BHLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO2dCQUN0QyxXQUFXLHFCQUFRLEtBQUssQ0FBRSxDQUFDO2dCQUMzQixXQUFXLENBQUMsSUFBSSxtQ0FBUSxLQUFLLENBQUMsSUFBSSxLQUFFLE1BQU0sRUFBRSxxQkFBcUIsR0FBRSxDQUFBO2FBQ25FO1lBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQ7O09BRUc7SUFDSSxXQUFXLENBQUMsT0FBZSxFQUFFLElBQVMsRUFBRSxPQUFlLEVBQUUsRUFBOEM7UUFDN0csTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3RHLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVEOztPQUVHO0lBQ0ksWUFBWSxDQUFDLFFBQWdDO1FBQ25ELE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6RCxLQUFLLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFUyxlQUFlLENBQUMsT0FBOEI7UUFDdkQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsT0FBTyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUUsR0FBRyxDQUFDLENBQUM7UUFDekYsS0FBSyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0Q7QUF0REQsa0RBc0RDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7RGVidWdQcm90b2NvbH0gZnJvbSAndnNjb2RlLWRlYnVncHJvdG9jb2wnO1xuXG5pbXBvcnQgKiBhcyBMb2dnZXIgZnJvbSAnLi9sb2dnZXInO1xuY29uc3QgbG9nZ2VyID0gTG9nZ2VyLmxvZ2dlcjtcbmltcG9ydCB7RGVidWdTZXNzaW9uLCBPdXRwdXRFdmVudH0gZnJvbSAnLi9kZWJ1Z1Nlc3Npb24nO1xuXG5leHBvcnQgY2xhc3MgTG9nZ2luZ0RlYnVnU2Vzc2lvbiBleHRlbmRzIERlYnVnU2Vzc2lvbiB7XG5cdHB1YmxpYyBjb25zdHJ1Y3Rvcihwcml2YXRlIG9ic29sZXRlX2xvZ0ZpbGVQYXRoPzogc3RyaW5nLCBvYnNvbGV0ZV9kZWJ1Z2dlckxpbmVzQW5kQ29sdW1uc1N0YXJ0QXQxPzogYm9vbGVhbiwgb2Jzb2xldGVfaXNTZXJ2ZXI/OiBib29sZWFuKSB7XG5cdFx0c3VwZXIob2Jzb2xldGVfZGVidWdnZXJMaW5lc0FuZENvbHVtbnNTdGFydEF0MSwgb2Jzb2xldGVfaXNTZXJ2ZXIpO1xuXG5cdFx0dGhpcy5vbignZXJyb3InLCAoZXZlbnQ6IERlYnVnUHJvdG9jb2wuRXZlbnQpID0+IHtcblx0XHRcdGxvZ2dlci5lcnJvcihldmVudC5ib2R5KTtcblx0XHR9KTtcblx0fVxuXG5cdHB1YmxpYyBzdGFydChpblN0cmVhbTogTm9kZUpTLlJlYWRhYmxlU3RyZWFtLCBvdXRTdHJlYW06IE5vZGVKUy5Xcml0YWJsZVN0cmVhbSk6IHZvaWQge1xuXHRcdHN1cGVyLnN0YXJ0KGluU3RyZWFtLCBvdXRTdHJlYW0pO1xuXHRcdGxvZ2dlci5pbml0KGUgPT4gdGhpcy5zZW5kRXZlbnQoZSksIHRoaXMub2Jzb2xldGVfbG9nRmlsZVBhdGgsIHRoaXMuX2lzU2VydmVyKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBPdmVybG9hZCBzZW5kRXZlbnQgdG8gbG9nXG5cdCAqL1xuXHRwdWJsaWMgc2VuZEV2ZW50KGV2ZW50OiBEZWJ1Z1Byb3RvY29sLkV2ZW50KTogdm9pZCB7XG5cdFx0aWYgKCEoZXZlbnQgaW5zdGFuY2VvZiBMb2dnZXIuTG9nT3V0cHV0RXZlbnQpKSB7XG5cdFx0XHQvLyBEb24ndCBjcmVhdGUgYW4gaW5maW5pdGUgbG9vcC4uLlxuXG5cdFx0XHRsZXQgb2JqZWN0VG9Mb2cgPSBldmVudDtcblx0XHRcdGlmIChldmVudCBpbnN0YW5jZW9mIE91dHB1dEV2ZW50ICYmIGV2ZW50LmJvZHkgJiYgZXZlbnQuYm9keS5kYXRhICYmIGV2ZW50LmJvZHkuZGF0YS5kb05vdExvZ091dHB1dCkge1xuXHRcdFx0XHRkZWxldGUgZXZlbnQuYm9keS5kYXRhLmRvTm90TG9nT3V0cHV0O1xuXHRcdFx0XHRvYmplY3RUb0xvZyA9IHsgLi4uZXZlbnQgfTtcblx0XHRcdFx0b2JqZWN0VG9Mb2cuYm9keSA9IHsgLi4uZXZlbnQuYm9keSwgb3V0cHV0OiAnPG91dHB1dCBub3QgbG9nZ2VkPicgfVxuXHRcdFx0fVxuXG5cdFx0XHRsb2dnZXIudmVyYm9zZShgVG8gY2xpZW50OiAke0pTT04uc3RyaW5naWZ5KG9iamVjdFRvTG9nKX1gKTtcblx0XHR9XG5cblx0XHRzdXBlci5zZW5kRXZlbnQoZXZlbnQpO1xuXHR9XG5cblx0LyoqXG5cdCAqIE92ZXJsb2FkIHNlbmRSZXF1ZXN0IHRvIGxvZ1xuXHQgKi9cblx0cHVibGljIHNlbmRSZXF1ZXN0KGNvbW1hbmQ6IHN0cmluZywgYXJnczogYW55LCB0aW1lb3V0OiBudW1iZXIsIGNiOiAocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUmVzcG9uc2UpID0+IHZvaWQpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgVG8gY2xpZW50OiAke0pTT04uc3RyaW5naWZ5KGNvbW1hbmQpfSgke0pTT04uc3RyaW5naWZ5KGFyZ3MpfSksIHRpbWVvdXQ6ICR7dGltZW91dH1gKTtcblx0XHRzdXBlci5zZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzLCB0aW1lb3V0LCBjYik7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcmxvYWQgc2VuZFJlc3BvbnNlIHRvIGxvZ1xuXHQgKi9cblx0cHVibGljIHNlbmRSZXNwb25zZShyZXNwb25zZTogRGVidWdQcm90b2NvbC5SZXNwb25zZSk6IHZvaWQge1xuXHRcdGxvZ2dlci52ZXJib3NlKGBUbyBjbGllbnQ6ICR7SlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpfWApO1xuXHRcdHN1cGVyLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZGlzcGF0Y2hSZXF1ZXN0KHJlcXVlc3Q6IERlYnVnUHJvdG9jb2wuUmVxdWVzdCk6IHZvaWQge1xuXHRcdGxvZ2dlci52ZXJib3NlKGBGcm9tIGNsaWVudDogJHtyZXF1ZXN0LmNvbW1hbmR9KCR7SlNPTi5zdHJpbmdpZnkocmVxdWVzdC5hcmd1bWVudHMpIH0pYCk7XG5cdFx0c3VwZXIuZGlzcGF0Y2hSZXF1ZXN0KHJlcXVlc3QpO1xuXHR9XG59XG4iXX0=","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = exports.Response = exports.Event = exports.ErrorDestination = exports.CompletionItem = exports.Module = exports.Source = exports.Breakpoint = exports.Variable = exports.Scope = exports.StackFrame = exports.Thread = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.logger = exports.Logger = exports.LoggingDebugSession = exports.DebugSession = void 0;\nconst debugSession_1 = require(\"./debugSession\");\nObject.defineProperty(exports, \"DebugSession\", { enumerable: true, get: function () { return debugSession_1.DebugSession; } });\nObject.defineProperty(exports, \"InitializedEvent\", { enumerable: true, get: function () { return debugSession_1.InitializedEvent; } });\nObject.defineProperty(exports, \"TerminatedEvent\", { enumerable: true, get: function () { return debugSession_1.TerminatedEvent; } });\nObject.defineProperty(exports, \"StoppedEvent\", { enumerable: true, get: function () { return debugSession_1.StoppedEvent; } });\nObject.defineProperty(exports, \"ContinuedEvent\", { enumerable: true, get: function () { return debugSession_1.ContinuedEvent; } });\nObject.defineProperty(exports, \"OutputEvent\", { enumerable: true, get: function () { return debugSession_1.OutputEvent; } });\nObject.defineProperty(exports, \"ThreadEvent\", { enumerable: true, get: function () { return debugSession_1.ThreadEvent; } });\nObject.defineProperty(exports, \"BreakpointEvent\", { enumerable: true, get: function () { return debugSession_1.BreakpointEvent; } });\nObject.defineProperty(exports, \"ModuleEvent\", { enumerable: true, get: function () { return debugSession_1.ModuleEvent; } });\nObject.defineProperty(exports, \"LoadedSourceEvent\", { enumerable: true, get: function () { return debugSession_1.LoadedSourceEvent; } });\nObject.defineProperty(exports, \"CapabilitiesEvent\", { enumerable: true, get: function () { return debugSession_1.CapabilitiesEvent; } });\nObject.defineProperty(exports, \"ProgressStartEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressStartEvent; } });\nObject.defineProperty(exports, \"ProgressUpdateEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressUpdateEvent; } });\nObject.defineProperty(exports, \"ProgressEndEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressEndEvent; } });\nObject.defineProperty(exports, \"InvalidatedEvent\", { enumerable: true, get: function () { return debugSession_1.InvalidatedEvent; } });\nObject.defineProperty(exports, \"Thread\", { enumerable: true, get: function () { return debugSession_1.Thread; } });\nObject.defineProperty(exports, \"StackFrame\", { enumerable: true, get: function () { return debugSession_1.StackFrame; } });\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return debugSession_1.Scope; } });\nObject.defineProperty(exports, \"Variable\", { enumerable: true, get: function () { return debugSession_1.Variable; } });\nObject.defineProperty(exports, \"Breakpoint\", { enumerable: true, get: function () { return debugSession_1.Breakpoint; } });\nObject.defineProperty(exports, \"Source\", { enumerable: true, get: function () { return debugSession_1.Source; } });\nObject.defineProperty(exports, \"Module\", { enumerable: true, get: function () { return debugSession_1.Module; } });\nObject.defineProperty(exports, \"CompletionItem\", { enumerable: true, get: function () { return debugSession_1.CompletionItem; } });\nObject.defineProperty(exports, \"ErrorDestination\", { enumerable: true, get: function () { return debugSession_1.ErrorDestination; } });\nconst loggingDebugSession_1 = require(\"./loggingDebugSession\");\nObject.defineProperty(exports, \"LoggingDebugSession\", { enumerable: true, get: function () { return loggingDebugSession_1.LoggingDebugSession; } });\nconst Logger = require(\"./logger\");\nexports.Logger = Logger;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return messages_1.Event; } });\nObject.defineProperty(exports, \"Response\", { enumerable: true, get: function () { return messages_1.Response; } });\nconst handles_1 = require(\"./handles\");\nObject.defineProperty(exports, \"Handles\", { enumerable: true, get: function () { return handles_1.Handles; } });\nconst logger = Logger.logger;\nexports.logger = logger;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBQ2hHLFlBQVksQ0FBQzs7O0FBRWIsaURBT3dCO0FBU3ZCLDZGQWZBLDJCQUFZLE9BZUE7QUFJWixpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNkZBbEJBLDJCQUFZLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQ3RILGtHQWxCQSxnQ0FBaUIsT0FrQkE7QUFBRSxrR0FsQkEsZ0NBQWlCLE9Ba0JBO0FBQUUsbUdBbEJBLGlDQUFrQixPQWtCQTtBQUFFLG9HQWxCQSxrQ0FBbUIsT0FrQkE7QUFBRSxpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsaUdBbEJBLCtCQUFnQixPQWtCQTtBQUNsSCx1RkFsQkEscUJBQU0sT0FrQkE7QUFBRSwyRkFsQkEseUJBQVUsT0FrQkE7QUFBRSxzRkFsQkEsb0JBQUssT0FrQkE7QUFBRSx5RkFsQkEsdUJBQVEsT0FrQkE7QUFDbkMsMkZBbEJBLHlCQUFVLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQzFDLGlHQWxCQSwrQkFBZ0IsT0FrQkE7QUFoQmpCLCtEQUEwRDtBQVN6RCxvR0FUTyx5Q0FBbUIsT0FTUDtBQVJwQixtQ0FBbUM7QUFTbEMsd0JBQU07QUFSUCx5Q0FBNkM7QUFlNUMsc0ZBZlEsZ0JBQUssT0FlUjtBQUFFLHlGQWZRLG1CQUFRLE9BZVI7QUFkaEIsdUNBQW9DO0FBZW5DLHdGQWZRLGlCQUFPLE9BZVI7QUFiUixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBTTVCLHdCQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQge1xuXHREZWJ1Z1Nlc3Npb24sXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgU3RvcHBlZEV2ZW50LCBDb250aW51ZWRFdmVudCwgT3V0cHV0RXZlbnQsIFRocmVhZEV2ZW50LCBCcmVha3BvaW50RXZlbnQsIE1vZHVsZUV2ZW50LFxuXHRcdExvYWRlZFNvdXJjZUV2ZW50LCBDYXBhYmlsaXRpZXNFdmVudCwgUHJvZ3Jlc3NTdGFydEV2ZW50LCBQcm9ncmVzc1VwZGF0ZUV2ZW50LCBQcm9ncmVzc0VuZEV2ZW50LCBJbnZhbGlkYXRlZEV2ZW50LFxuXHRUaHJlYWQsIFN0YWNrRnJhbWUsIFNjb3BlLCBWYXJpYWJsZSxcblx0QnJlYWtwb2ludCwgU291cmNlLCBNb2R1bGUsIENvbXBsZXRpb25JdGVtLFxuXHRFcnJvckRlc3RpbmF0aW9uXG59IGZyb20gJy4vZGVidWdTZXNzaW9uJztcbmltcG9ydCB7TG9nZ2luZ0RlYnVnU2Vzc2lvbn0gZnJvbSAnLi9sb2dnaW5nRGVidWdTZXNzaW9uJztcbmltcG9ydCAqIGFzIExvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgeyBFdmVudCwgUmVzcG9uc2UgfSBmcm9tICcuL21lc3NhZ2VzJztcbmltcG9ydCB7IEhhbmRsZXMgfSBmcm9tICcuL2hhbmRsZXMnO1xuXG5jb25zdCBsb2dnZXIgPSBMb2dnZXIubG9nZ2VyO1xuXG5leHBvcnQge1xuXHREZWJ1Z1Nlc3Npb24sXG5cdExvZ2dpbmdEZWJ1Z1Nlc3Npb24sXG5cdExvZ2dlcixcblx0bG9nZ2VyLFxuXHRJbml0aWFsaXplZEV2ZW50LCBUZXJtaW5hdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCxcblx0VGhyZWFkLCBTdGFja0ZyYW1lLCBTY29wZSwgVmFyaWFibGUsXG5cdEJyZWFrcG9pbnQsIFNvdXJjZSwgTW9kdWxlLCBDb21wbGV0aW9uSXRlbSxcblx0RXJyb3JEZXN0aW5hdGlvbixcblx0RXZlbnQsIFJlc3BvbnNlLFxuXHRIYW5kbGVzXG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Event = exports.Response = exports.Message = void 0;\nclass Message {\n    constructor(type) {\n        this.seq = 0;\n        this.type = type;\n    }\n}\nexports.Message = Message;\nclass Response extends Message {\n    constructor(request, message) {\n        super('response');\n        this.request_seq = request.seq;\n        this.command = request.command;\n        if (message) {\n            this.success = false;\n            this.message = message;\n        }\n        else {\n            this.success = true;\n        }\n    }\n}\nexports.Response = Response;\nclass Event extends Message {\n    constructor(event, body) {\n        super('event');\n        this.event = event;\n        if (body) {\n            this.body = body;\n        }\n    }\n}\nexports.Event = Event;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWVzc2FnZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Z0dBR2dHOzs7QUFLaEcsTUFBYSxPQUFPO0lBSW5CLFlBQW1CLElBQVk7UUFDOUIsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBQ0Q7QUFSRCwwQkFRQztBQUVELE1BQWEsUUFBUyxTQUFRLE9BQU87SUFLcEMsWUFBbUIsT0FBOEIsRUFBRSxPQUFnQjtRQUNsRSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQy9CLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUMvQixJQUFJLE9BQU8sRUFBRTtZQUNaLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ2YsSUFBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7U0FDOUI7YUFBTTtZQUNOLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ3BCO0lBQ0YsQ0FBQztDQUNEO0FBaEJELDRCQWdCQztBQUVELE1BQWEsS0FBTSxTQUFRLE9BQU87SUFHakMsWUFBbUIsS0FBYSxFQUFFLElBQVU7UUFDM0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxJQUFJLEVBQUU7WUFDSCxJQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUN4QjtJQUNGLENBQUM7Q0FDRDtBQVZELHNCQVVDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7IERlYnVnUHJvdG9jb2wgfSBmcm9tICd2c2NvZGUtZGVidWdwcm90b2NvbCc7XG5cblxuZXhwb3J0IGNsYXNzIE1lc3NhZ2UgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLlByb3RvY29sTWVzc2FnZSB7XG5cdHNlcTogbnVtYmVyO1xuXHR0eXBlOiBzdHJpbmc7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHR5cGU6IHN0cmluZykge1xuXHRcdHRoaXMuc2VxID0gMDtcblx0XHR0aGlzLnR5cGUgPSB0eXBlO1xuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBSZXNwb25zZSBleHRlbmRzIE1lc3NhZ2UgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLlJlc3BvbnNlIHtcblx0cmVxdWVzdF9zZXE6IG51bWJlcjtcblx0c3VjY2VzczogYm9vbGVhbjtcblx0Y29tbWFuZDogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihyZXF1ZXN0OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QsIG1lc3NhZ2U/OiBzdHJpbmcpIHtcblx0XHRzdXBlcigncmVzcG9uc2UnKTtcblx0XHR0aGlzLnJlcXVlc3Rfc2VxID0gcmVxdWVzdC5zZXE7XG5cdFx0dGhpcy5jb21tYW5kID0gcmVxdWVzdC5jb21tYW5kO1xuXHRcdGlmIChtZXNzYWdlKSB7XG5cdFx0XHR0aGlzLnN1Y2Nlc3MgPSBmYWxzZTtcblx0XHRcdCg8YW55PnRoaXMpLm1lc3NhZ2UgPSBtZXNzYWdlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnN1Y2Nlc3MgPSB0cnVlO1xuXHRcdH1cblx0fVxufVxuXG5leHBvcnQgY2xhc3MgRXZlbnQgZXh0ZW5kcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5FdmVudCB7XG5cdGV2ZW50OiBzdHJpbmc7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKGV2ZW50OiBzdHJpbmcsIGJvZHk/OiBhbnkpIHtcblx0XHRzdXBlcignZXZlbnQnKTtcblx0XHR0aGlzLmV2ZW50ID0gZXZlbnQ7XG5cdFx0aWYgKGJvZHkpIHtcblx0XHRcdCg8YW55PnRoaXMpLmJvZHkgPSBib2R5O1xuXHRcdH1cblx0fVxufVxuIl19","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolServer = void 0;\nconst ee = require(\"events\");\nconst messages_1 = require(\"./messages\");\nclass Disposable0 {\n    dispose() {\n    }\n}\nclass Emitter {\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArg) => {\n                this._listener = listener;\n                this._this = thisArg;\n                let result;\n                result = {\n                    dispose: () => {\n                        this._listener = undefined;\n                        this._this = undefined;\n                    }\n                };\n                return result;\n            };\n        }\n        return this._event;\n    }\n    fire(event) {\n        if (this._listener) {\n            try {\n                this._listener.call(this._this, event);\n            }\n            catch (e) {\n            }\n        }\n    }\n    hasListener() {\n        return !!this._listener;\n    }\n    dispose() {\n        this._listener = undefined;\n        this._this = undefined;\n    }\n}\nclass ProtocolServer extends ee.EventEmitter {\n    constructor() {\n        super();\n        this._sendMessage = new Emitter();\n        this._pendingRequests = new Map();\n        this.onDidSendMessage = this._sendMessage.event;\n    }\n    // ---- implements vscode.Debugadapter interface ---------------------------\n    dispose() {\n    }\n    handleMessage(msg) {\n        if (msg.type === 'request') {\n            this.dispatchRequest(msg);\n        }\n        else if (msg.type === 'response') {\n            const response = msg;\n            const clb = this._pendingRequests.get(response.request_seq);\n            if (clb) {\n                this._pendingRequests.delete(response.request_seq);\n                clb(response);\n            }\n        }\n    }\n    _isRunningInline() {\n        return this._sendMessage && this._sendMessage.hasListener();\n    }\n    //--------------------------------------------------------------------------\n    start(inStream, outStream) {\n        this._sequence = 1;\n        this._writableStream = outStream;\n        this._rawData = Buffer.alloc(0);\n        inStream.on('data', (data) => this._handleData(data));\n        inStream.on('close', () => {\n            this._emitEvent(new messages_1.Event('close'));\n        });\n        inStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'inStream error: ' + (error && error.message)));\n        });\n        outStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'outStream error: ' + (error && error.message)));\n        });\n        inStream.resume();\n    }\n    stop() {\n        if (this._writableStream) {\n            this._writableStream.end();\n        }\n    }\n    sendEvent(event) {\n        this._send('event', event);\n    }\n    sendResponse(response) {\n        if (response.seq > 0) {\n            console.error(`attempt to send more than one response for command ${response.command}`);\n        }\n        else {\n            this._send('response', response);\n        }\n    }\n    sendRequest(command, args, timeout, cb) {\n        const request = {\n            command: command\n        };\n        if (args && Object.keys(args).length > 0) {\n            request.arguments = args;\n        }\n        this._send('request', request);\n        if (cb) {\n            this._pendingRequests.set(request.seq, cb);\n            const timer = setTimeout(() => {\n                clearTimeout(timer);\n                const clb = this._pendingRequests.get(request.seq);\n                if (clb) {\n                    this._pendingRequests.delete(request.seq);\n                    clb(new messages_1.Response(request, 'timeout'));\n                }\n            }, timeout);\n        }\n    }\n    // ---- protected ----------------------------------------------------------\n    dispatchRequest(request) {\n    }\n    // ---- private ------------------------------------------------------------\n    _emitEvent(event) {\n        this.emit(event.event, event);\n    }\n    _send(typ, message) {\n        message.type = typ;\n        message.seq = this._sequence++;\n        if (this._writableStream) {\n            const json = JSON.stringify(message);\n            this._writableStream.write(`Content-Length: ${Buffer.byteLength(json, 'utf8')}\\r\\n\\r\\n${json}`, 'utf8');\n        }\n        this._sendMessage.fire(message);\n    }\n    _handleData(data) {\n        this._rawData = Buffer.concat([this._rawData, data]);\n        while (true) {\n            if (this._contentLength >= 0) {\n                if (this._rawData.length >= this._contentLength) {\n                    const message = this._rawData.toString('utf8', 0, this._contentLength);\n                    this._rawData = this._rawData.slice(this._contentLength);\n                    this._contentLength = -1;\n                    if (message.length > 0) {\n                        try {\n                            let msg = JSON.parse(message);\n                            this.handleMessage(msg);\n                        }\n                        catch (e) {\n                            this._emitEvent(new messages_1.Event('error', 'Error handling data: ' + (e && e.message)));\n                        }\n                    }\n                    continue; // there may be more complete messages to process\n                }\n            }\n            else {\n                const idx = this._rawData.indexOf(ProtocolServer.TWO_CRLF);\n                if (idx !== -1) {\n                    const header = this._rawData.toString('utf8', 0, idx);\n                    const lines = header.split('\\r\\n');\n                    for (let i = 0; i < lines.length; i++) {\n                        const pair = lines[i].split(/: +/);\n                        if (pair[0] == 'Content-Length') {\n                            this._contentLength = +pair[1];\n                        }\n                    }\n                    this._rawData = this._rawData.slice(idx + ProtocolServer.TWO_CRLF.length);\n                    continue;\n                }\n            }\n            break;\n        }\n    }\n}\nexports.ProtocolServer = ProtocolServer;\nProtocolServer.TWO_CRLF = '\\r\\n\\r\\n';\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runDebugAdapter = void 0;\nconst Net = require(\"net\");\nfunction runDebugAdapter(debugSession) {\n    // parse arguments\n    let port = 0;\n    const args = process.argv.slice(2);\n    args.forEach(function (val, index, array) {\n        const portMatch = /^--server=(\\d{4,5})$/.exec(val);\n        if (portMatch) {\n            port = parseInt(portMatch[1], 10);\n        }\n    });\n    if (port > 0) {\n        // start as a server\n        console.error(`waiting for debug protocol on port ${port}`);\n        Net.createServer((socket) => {\n            console.error('>> accepted connection from client');\n            socket.on('end', () => {\n                console.error('>> client connection closed\\n');\n            });\n            const session = new debugSession(false, true);\n            session.setRunAsServer(true);\n            session.start(socket, socket);\n        }).listen(port);\n    }\n    else {\n        // start a session\n        //console.error('waiting for debug protocol on stdin/stdout');\n        const session = new debugSession(false);\n        process.on('SIGTERM', () => {\n            session.shutdown();\n        });\n        session.start(process.stdin, process.stdout);\n    }\n}\nexports.runDebugAdapter = runDebugAdapter;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuRGVidWdBZGFwdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3J1bkRlYnVnQWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztnR0FHZ0c7OztBQUVoRywyQkFBMkI7QUFJM0IsU0FBZ0IsZUFBZSxDQUFDLFlBQWlDO0lBRWhFLGtCQUFrQjtJQUNsQixJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDYixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLO1FBQ3ZDLE1BQU0sU0FBUyxHQUFHLHNCQUFzQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuRCxJQUFJLFNBQVMsRUFBRTtZQUNkLElBQUksR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2xDO0lBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUU7UUFDYixvQkFBb0I7UUFDcEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUM1RCxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDM0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1lBQ3BELE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtnQkFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1lBQ2hELENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzlDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2hCO1NBQU07UUFFTixrQkFBa0I7UUFDbEIsOERBQThEO1FBQzlELE1BQU0sT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRTtZQUMxQixPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzdDO0FBQ0YsQ0FBQztBQWxDRCwwQ0FrQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuaW1wb3J0ICogYXMgTmV0IGZyb20gJ25ldCc7XG5cbmltcG9ydCB7IERlYnVnU2Vzc2lvbiB9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bkRlYnVnQWRhcHRlcihkZWJ1Z1Nlc3Npb246IHR5cGVvZiBEZWJ1Z1Nlc3Npb24pIHtcblxuXHQvLyBwYXJzZSBhcmd1bWVudHNcblx0bGV0IHBvcnQgPSAwO1xuXHRjb25zdCBhcmdzID0gcHJvY2Vzcy5hcmd2LnNsaWNlKDIpO1xuXHRhcmdzLmZvckVhY2goZnVuY3Rpb24gKHZhbCwgaW5kZXgsIGFycmF5KSB7XG5cdFx0Y29uc3QgcG9ydE1hdGNoID0gL14tLXNlcnZlcj0oXFxkezQsNX0pJC8uZXhlYyh2YWwpO1xuXHRcdGlmIChwb3J0TWF0Y2gpIHtcblx0XHRcdHBvcnQgPSBwYXJzZUludChwb3J0TWF0Y2hbMV0sIDEwKTtcblx0XHR9XG5cdH0pO1xuXG5cdGlmIChwb3J0ID4gMCkge1xuXHRcdC8vIHN0YXJ0IGFzIGEgc2VydmVyXG5cdFx0Y29uc29sZS5lcnJvcihgd2FpdGluZyBmb3IgZGVidWcgcHJvdG9jb2wgb24gcG9ydCAke3BvcnR9YCk7XG5cdFx0TmV0LmNyZWF0ZVNlcnZlcigoc29ja2V0KSA9PiB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCc+PiBhY2NlcHRlZCBjb25uZWN0aW9uIGZyb20gY2xpZW50Jyk7XG5cdFx0XHRzb2NrZXQub24oJ2VuZCcsICgpID0+IHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcignPj4gY2xpZW50IGNvbm5lY3Rpb24gY2xvc2VkXFxuJyk7XG5cdFx0XHR9KTtcblx0XHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlLCB0cnVlKTtcblx0XHRcdHNlc3Npb24uc2V0UnVuQXNTZXJ2ZXIodHJ1ZSk7XG5cdFx0XHRzZXNzaW9uLnN0YXJ0KHNvY2tldCwgc29ja2V0KTtcblx0XHR9KS5saXN0ZW4ocG9ydCk7XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBzdGFydCBhIHNlc3Npb25cblx0XHQvL2NvbnNvbGUuZXJyb3IoJ3dhaXRpbmcgZm9yIGRlYnVnIHByb3RvY29sIG9uIHN0ZGluL3N0ZG91dCcpO1xuXHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlKTtcblx0XHRwcm9jZXNzLm9uKCdTSUdURVJNJywgKCkgPT4ge1xuXHRcdFx0c2Vzc2lvbi5zaHV0ZG93bigpO1xuXHRcdH0pO1xuXHRcdHNlc3Npb24uc3RhcnQocHJvY2Vzcy5zdGRpbiwgcHJvY2Vzcy5zdGRvdXQpO1xuXHR9XG59XG4iXX0=","const optsArg = require('./lib/opts-arg.js')\nconst pathArg = require('./lib/path-arg.js')\n\nconst {mkdirpNative, mkdirpNativeSync} = require('./lib/mkdirp-native.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./lib/mkdirp-manual.js')\nconst {useNative, useNativeSync} = require('./lib/use-native.js')\n\n\nconst mkdirp = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNative(opts)\n    ? mkdirpNative(path, opts)\n    : mkdirpManual(path, opts)\n}\n\nconst mkdirpSync = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNativeSync(opts)\n    ? mkdirpNativeSync(path, opts)\n    : mkdirpManualSync(path, opts)\n}\n\nmkdirp.sync = mkdirpSync\nmkdirp.native = (path, opts) => mkdirpNative(pathArg(path), optsArg(opts))\nmkdirp.manual = (path, opts) => mkdirpManual(pathArg(path), optsArg(opts))\nmkdirp.nativeSync = (path, opts) => mkdirpNativeSync(pathArg(path), optsArg(opts))\nmkdirp.manualSync = (path, opts) => mkdirpManualSync(pathArg(path), optsArg(opts))\n\nmodule.exports = mkdirp\n","const {dirname} = require('path')\n\nconst findMade = (opts, parent, path = undefined) => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent)\n    return Promise.resolve()\n\n  return opts.statAsync(parent).then(\n    st => st.isDirectory() ? path : undefined, // will fail later\n    er => er.code === 'ENOENT'\n      ? findMade(opts, dirname(parent), parent)\n      : undefined\n  )\n}\n\nconst findMadeSync = (opts, parent, path = undefined) => {\n  if (path === parent)\n    return undefined\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined\n  } catch (er) {\n    return er.code === 'ENOENT'\n      ? findMadeSync(opts, dirname(parent), parent)\n      : undefined\n  }\n}\n\nmodule.exports = {findMade, findMadeSync}\n","const {dirname} = require('path')\n\nconst mkdirpManual = (path, opts, made) => {\n  opts.recursive = false\n  const parent = dirname(path)\n  if (parent === path) {\n    return opts.mkdirAsync(path, opts).catch(er => {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n    })\n  }\n\n  return opts.mkdirAsync(path, opts).then(() => made || path, er => {\n    if (er.code === 'ENOENT')\n      return mkdirpManual(parent, opts)\n        .then(made => mkdirpManual(path, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    return opts.statAsync(path).then(st => {\n      if (st.isDirectory())\n        return made\n      else\n        throw er\n    }, () => { throw er })\n  })\n}\n\nconst mkdirpManualSync = (path, opts, made) => {\n  const parent = dirname(path)\n  opts.recursive = false\n\n  if (parent === path) {\n    try {\n      return opts.mkdirSync(path, opts)\n    } catch (er) {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n      else\n        return\n    }\n  }\n\n  try {\n    opts.mkdirSync(path, opts)\n    return made || path\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts, mkdirpManualSync(parent, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    try {\n      if (!opts.statSync(path).isDirectory())\n        throw er\n    } catch (_) {\n      throw er\n    }\n  }\n}\n\nmodule.exports = {mkdirpManual, mkdirpManualSync}\n","const {dirname} = require('path')\nconst {findMade, findMadeSync} = require('./find-made.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./mkdirp-manual.js')\n\nconst mkdirpNative = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirAsync(path, opts)\n\n  return findMade(opts, path).then(made =>\n    opts.mkdirAsync(path, opts).then(() => made)\n    .catch(er => {\n      if (er.code === 'ENOENT')\n        return mkdirpManual(path, opts)\n      else\n        throw er\n    }))\n}\n\nconst mkdirpNativeSync = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirSync(path, opts)\n\n  const made = findMadeSync(opts, path)\n  try {\n    opts.mkdirSync(path, opts)\n    return made\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts)\n    else\n      throw er\n  }\n}\n\nmodule.exports = {mkdirpNative, mkdirpNativeSync}\n","const { promisify } = require('util')\nconst fs = require('fs')\nconst optsArg = opts => {\n  if (!opts)\n    opts = { mode: 0o777, fs }\n  else if (typeof opts === 'object')\n    opts = { mode: 0o777, fs, ...opts }\n  else if (typeof opts === 'number')\n    opts = { mode: opts, fs }\n  else if (typeof opts === 'string')\n    opts = { mode: parseInt(opts, 8), fs }\n  else\n    throw new TypeError('invalid options argument')\n\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir\n  opts.mkdirAsync = promisify(opts.mkdir)\n  opts.stat = opts.stat || opts.fs.stat || fs.stat\n  opts.statAsync = promisify(opts.stat)\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync\n  return opts\n}\nmodule.exports = optsArg\n","const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\nconst { resolve, parse } = require('path')\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(\n      new TypeError('path must be a string without null bytes'),\n      {\n        path,\n        code: 'ERR_INVALID_ARG_VALUE',\n      }\n    )\n  }\n\n  path = resolve(path)\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const {root} = parse(path)\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\nmodule.exports = pathArg\n","const fs = require('fs')\n\nconst version = process.env.__TESTING_MKDIRP_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\nconst hasNative = +versArr[0] > 10 || +versArr[0] === 10 && +versArr[1] >= 12\n\nconst useNative = !hasNative ? () => false : opts => opts.mkdir === fs.mkdir\nconst useNativeSync = !hasNative ? () => false : opts => opts.mkdirSync === fs.mkdirSync\n\nmodule.exports = {useNative, useNativeSync}\n","module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n\nimport * as vscode from 'vscode';\n\nimport {activateDbg} from './activateDbg';\n\nexport function activate(context: vscode.ExtensionContext) {\n  activateDbg(context);\n}\n\nexport function deactivate() {}\n"],"names":["path","stream","util","fs","TailStream","filepath","opts","key","super_","call","this","lastSize","bytesRead","watching","resolve","buffer","Buffer","beginAt","detectTruncate","onMove","onTruncate","endOnError","useWatch","watch","waitForCreate","_start","firstRead","waitingForReappear","fd","openSync","dataAvailable","e","waitForFileToReappear","getCurrentPath","filename","existsSync","readlinkSync","watcher","close","waitForMoreData","fileReappeared","unwatchFile","watchFileCallback","emit","move","newpath","oldpath","error","forceWatchFile","persistent","event","read","bind","dirname","basename","msg","code","end","cur","prev","dev","ino","mtime","getTime","errCode","push","_read","size","stat","_readCont","err","parseInt","length","slice","inherits","Readable","module","exports","ts","createReadStream","options","EVENT_OUTPUT","EVENT_RUNNING","EVENT_BREAKPOINT_HIT","EVENT_END_STEPPING_RANGE","EVENT_FUNCTION_FINISHED","EVENT_EXITED_NORMALLY","EVENT_SIGNAL","EVENT_PAUSED","EVENT_ERROR","EVENT_ERROR_FATAL","EVENT_THREAD_NEW","EVENT_SOLIB_LOADED","SCOPE_LOCAL","TerminalWindow","IntegratedTerminal","constructor","cmd","terminal","super","sendCommand","show","sendText","destroy","ExternalTerminal","spawn","on","console","log","stdin","write","kill","GDB","EventEmitter","outputChannel","args","debug","DebugLoggingLevel","OFF","inputFile","outputFile","PID","handleSIGINT","sharedLibraries","useAbsoluteFilePaths","token","threadID","ob","handlers","parser","MIParser","createIOPipes","generateTmpFile","exec","text","appendLine","genRandomID","result","characters","charactersLength","i","charAt","Math","floor","random","desc","createLaunchCommand","writeFile","join","setDebug","isLaunch","arg","program","Promise","reject","envVarsSetupCmd","debugger","undefined","concat","envVars","createEnvVarsCmd","launchCmd","externalConsole","inputHandle","createWriteStream","flags","outputHandle","data","stdoutHandler","cmdsPending","startupCmds","forEach","all","then","brkpoints","record","prettyPrint","deferLibraryLoading","libraries","sanitize","MI","replace","str","toString","nPos","lastIndexOf","substr","lines","split","substring","line","parse","handleParsedResult","StreamRecord","VERBOSE","stack","AsyncRecord","getType","AsyncRecordType","EXEC","getClass","STOPPED","getResult","reason","Error","RUNNING","tid","isNaN","NOTIFY","libLoaded","indexOf","STATUS","ResultRecord","getToken","handler","clearBreakpoints","setBreakpoints","sourceFile","bps","bpsPending","bpsVerified","bp","promise","bpInfo","condition","number","Breakpoint","startInferior","vscode","commands","executeCommand","attachInferior","evaluateExpr","expr","frameID","execUserCmd","ERROR","getThreads","threadsResult","threads","len","thread","Thread","id","name","isStopped","getStack","stackFinal","frame","StackFrame","level","func","Source","file","fullname","getVars","reference","next","continue","stepIn","stepOut","pause","catchSignal","quit","attach","dispose","updateVar","variable","val","GDBDebugSession","LoggingDebugSession","clear","workspace","getConfiguration","get","window","showErrorMessage","initializeRequest","response","sendEvent","TerminatedEvent","OutputEvent","allThreads","ContinuedEvent","StoppedEvent","ThreadEvent","body","supportsEvaluateForHovers","supportsSetVariable","supportsConfigurationDoneRequest","sendResponse","InitializedEvent","attachRequest","launchRequest","configurationDoneRequest","setBreakPointsRequest","source","breakpoints","threadsRequest","stackTraceRequest","threadId","stackFrames","totalFrames","scopesRequest","scopes","Scope","frameId","variablesRequest","request","variablesReference","vars","variables","value","Variable","nextRequest","stepInRequest","stepOutRequest","continueRequest","evaluateRequest","context","expression","pauseRequest","disconnectRequest","terminateDebuggee","setVariableRequest","GDBConfigurationProvider","resolveDebugConfiguration","folder","config","type","editor","activeTextEditor","document","languageId","stopOnEntry","server","Net","createServer","socket","session","setRunAsServer","start","listen","address","debugServer","port","factory","subscriptions","registerCommand","showInputBox","placeHolder","provider","createTerminal","createOutputChannel","registerDebugConfigurationProvider","Record","VARIABLE","CSTRING","OUT_OF_BAND_RECORD","RegExp","RESULT_RECORD","ASYNC_CLASS","VALUE_CSTRING","VALUE_TUPLE","VALUE_LIST","parseOutOfBandRecord","parseResultRecord","trimRight","message","parseToken","match","NaN","parseAsyncRecord","parseStreamRecord","setType","setClass","parseResult","addResult","parseValue","parseCString","parseTuple","parseList","tuple","list","results","Map","klass","set","ResultRecordType","StreamRecordType","typeEnum","Object","defineProperty","DebugSession","ErrorDestination","InvalidatedEvent","ProgressEndEvent","ProgressUpdateEvent","ProgressStartEvent","CapabilitiesEvent","LoadedSourceEvent","ModuleEvent","BreakpointEvent","CompletionItem","Module","protocol_1","messages_1","runDebugAdapter_1","url_1","origin","sourceReference","adapterData","expensive","nm","src","ln","col","column","ref","indexedVariables","namedVariables","verified","label","Event","exceptionText","allThreadsContinued","restart","output","category","breakpoint","capabilities","progressId","title","areas","stackFrameId","ProtocolServer","obsolete_debuggerLinesAndColumnsStartAt1","obsolete_isServer","linesAndColumnsStartAt1","_debuggerLinesStartAt1","_debuggerColumnsStartAt1","_debuggerPathsAreURIs","_clientLinesStartAt1","_clientColumnsStartAt1","_clientPathsAreURIs","_isServer","shutdown","setDebuggerPathFormat","format","setDebuggerLinesStartAt1","enable","setDebuggerColumnsStartAt1","static","debugSession","runDebugAdapter","_isRunningInline","setTimeout","process","exit","sendErrorResponse","codeOrMessage","dest","User","showUser","Telemetry","sendTelemetry","success","formatPII","runInTerminalRequest","timeout","cb","sendRequest","dispatchRequest","Response","command","arguments","linesStartAt1","columnsStartAt1","pathFormat","initializeResponse","terminateRequest","restartRequest","setFunctionBreakPointsRequest","setExceptionBreakPointsRequest","stepBackRequest","reverseContinueRequest","restartFrameRequest","gotoRequest","setExpressionRequest","sourceRequest","terminateThreadsRequest","stepInTargetsRequest","gotoTargetsRequest","completionsRequest","exceptionInfoRequest","loadedSourcesRequest","dataBreakpointInfoRequest","setDataBreakpointsRequest","readMemoryRequest","writeMemoryRequest","disassembleRequest","cancelRequest","breakpointLocationsRequest","setInstructionBreakpointsRequest","customRequest","_exception","_stack","supportsConditionalBreakpoints","supportsHitConditionalBreakpoints","supportsFunctionBreakpoints","supportsStepBack","supportsRestartFrame","supportsStepInTargetsRequest","supportsGotoTargetsRequest","supportsCompletionsRequest","supportsRestartRequest","supportsExceptionOptions","supportsValueFormattingOptions","supportsExceptionInfoRequest","supportTerminateDebuggee","supportsDelayedStackTraceLoading","supportsLoadedSourcesRequest","supportsLogPoints","supportsTerminateThreadsRequest","supportsSetExpression","supportsTerminateRequest","supportsDataBreakpoints","supportsReadMemoryRequest","supportsDisassembleRequest","supportsCancelRequest","supportsBreakpointLocationsRequest","supportsClipboardContext","supportsSteppingGranularity","supportsInstructionBreakpoints","supportsExceptionFilterOptions","convertClientLineToDebugger","convertDebuggerLineToClient","convertClientColumnToDebugger","convertDebuggerColumnToClient","convertClientPathToDebugger","clientPath","uri2path","path2uri","convertDebuggerPathToClient","debuggerPath","platform","test","toLowerCase","encodeURI","uri","URL","pathname","sourceUri","s","decodeURIComponent","excludePII","_formatPIIRegexp","paramName","hasOwnProperty","Handles","startHandle","START_HANDLE","_handleMap","_nextHandle","reset","create","handle","dflt","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","apply","InternalLogger","mkdirp","logger_1","getFormattedTimeString","d","Date","_padZeroes","String","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","minDesiredLength","numberToPad","repeat","logCallback","isServer","beforeExitCallback","_logCallback","_logToConsole","_minLogLevel","LogLevel","Warn","disposeCallback","signal","setup","consoleMinLogLevel","_prependTimestamp","prependTimestamp","logFilePath","isAbsolute","handleError","sendLog","_logFileStream","logDateTime","setupShutdownListeners","timeAndDateStamp","getUTCFullYear","getUTCMonth","getUTCDate","Verbose","addListener","removeShutdownListeners","removeListener","Stop","logFn","warn","trimLastNewline","endsInNewline","LogOutputEvent","logger","Logger","internalLogger_1","debugSession_1","_pendingLogQ","Log","_write","verbose","_currentLogger","disposeP","_logFilePath","_logFilePathFromInit","logQ","item","init","logToConsole","obsolete_logFilePath","inStream","outStream","objectToLog","doNotLogOutput","assign","JSON","stringify","enumerable","loggingDebugSession_1","handles_1","Message","seq","request_seq","ee","Emitter","_event","listener","_listener","_this","fire","hasListener","_sendMessage","_pendingRequests","onDidSendMessage","handleMessage","clb","delete","_sequence","_writableStream","_rawData","alloc","_handleData","_emitEvent","resume","stop","_send","keys","timer","clearTimeout","typ","json","byteLength","_contentLength","idx","TWO_CRLF","pair","argv","index","array","portMatch","stdout","optsArg","pathArg","mkdirpNative","mkdirpNativeSync","mkdirpManual","mkdirpManualSync","useNative","useNativeSync","sync","native","manual","nativeSync","manualSync","findMade","parent","statAsync","st","isDirectory","er","findMadeSync","statSync","made","recursive","mkdirAsync","catch","mkdirSync","_","promisify","mode","TypeError","mkdir","env","__TESTING_MKDIRP_PLATFORM__","badWinChars","root","versArr","__TESTING_MKDIRP_NODE_VERSION__","version","hasNative","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","activateDbg"],"sourceRoot":""}